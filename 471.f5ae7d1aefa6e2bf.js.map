{"version":3,"file":"471.f5ae7d1aefa6e2bf.js","mappings":"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","names":["i0","BestPracticesComponent","constructor","this","selectors","CommonModule","i1","ViewerComponent","linkCode","isOpenCode","BreadcrumbService","BehaviorSubject","actualRoute","name","routes","url","factory","OBreadcrumbComponent","router","breadcrumbService","Subject","ngOnInit","breadcrumb$","pipe","takeUntil","onDestroy$","subscribe","breadcrumb","Object","entries","length","getReversedRoutes","getPaths","events","filter","event","NavigationEnd","startWith","next","split","forEach","item","index","isNaN","push","formatedName","formatedUrl","path","toUpperCase","join","slice","route","pop","reverse","map","n","id","ngOnDestroy","complete","i3","BreadcrumbApiComponent","BREADCRUMB_INTERFACE1","BREADCRUMB_INTERFACE2","component","BreadcrumbOverviewComponent","BREADCRUMB_BEST_PRACTICES","BreadcrumbExamplesComponent","BREADCRUMB_EXAMPLE_TS","pathMatch","redirectTo","BreadcrumbRoutingModule","RouterModule","BreadcrumbModule","ONavModule","ClipboardDirective","host","renderer","ngAfterViewInit","navigator","clipboard","button","nativeElement","closest","querySelector","listen","target","pre","p","parentElement","code","m","writeText","e","innerText","setTimeout"],"sourceRoot":"webpack:///","sources":["./src/app/components/best-practices/best-practices.component.html","./src/app/components/best-practices/best-practices.component.ts","./src/app/components/viewer/viewer.component.html","./src/app/components/viewer/viewer.component.ts","./projects/ngx-obelisco/src/lib/core/services/breadcrumb/breadcrumb.service.ts","./projects/ngx-obelisco/src/lib/components/o-breadcrumb/o-breadcrumb.component.html","./projects/ngx-obelisco/src/lib/components/o-breadcrumb/o-breadcrumb.component.ts","./src/app/modules/section-components/breadcrumb/pages/breadcrumb-api/breadcrumb-api.component.ts","./src/app/modules/section-components/breadcrumb/pages/breadcrumb-api/breadcrumb-api.component.html","./src/app/modules/section-components/breadcrumb/breadcrumb-routing.module.ts","./src/app/modules/section-components/breadcrumb/pages/breadcrumb-overview/breadcrumb-overview.component.ts","./src/app/modules/section-components/breadcrumb/pages/breadcrumb-overview/breadcrumb-overview.component.html","./src/app/modules/section-components/breadcrumb/pages/breadcrumb-examples/breadcrumb-examples.component.ts","./src/app/modules/section-components/breadcrumb/pages/breadcrumb-examples/breadcrumb-examples.component.html","./src/app/modules/section-components/breadcrumb/breadcrumb.module.ts","./src/app/shared/directives/copy/clipboard.directive.ts"],"sourcesContent":["<div class=\"section-best-practices\">\n  <h3>Buenas pr√°cticas</h3>\n\n  <ul class=\"usability\">\n    <li class=\"do\" *ngFor=\"let practice of practices\">\n      <p [innerHTML]=\"practice\"></p>\n    </li>\n  </ul>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-best-practices',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './best-practices.component.html',\n  styleUrls: ['./best-practices.component.scss']\n})\nexport class BestPracticesComponent {\n  @Input() public practices: string[] = [];\n}\n","<div class=\"example-wrapper\">\n  <div class=\"example-viewer\">\n    <p>{{ title }}</p>\n    <nav>\n      <ul class=\"nav flex-row nav-pills\">\n        <li class=\"nav-item d-flex\">\n          <a class=\"nav-link\" [class.active]=\"isOpenCode\" (click)=\"isOpenCode = !isOpenCode\">\n            <span>{{ linkCode }}</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n  </div>\n  <div class=\"wrapper\">\n    <nav *ngIf=\"isOpenCode && isNavCode\">\n      <ul class=\"nav flex-row nav-pills\">\n        <li class=\"nav-item d-flex\">\n          <a class=\"nav-link\" [class.active]=\"isWindowHTML\" (click)=\"isWindowHTML = true\">\n            <span>HTML</span>\n          </a>\n          <a class=\"nav-link\" [class.active]=\"!isWindowHTML\" (click)=\"isWindowHTML = false\">\n            <span>TS</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n    <ng-container *ngIf=\"!isOpenCode; else codeTemplate\">\n      <ng-content select=\"[component]\"></ng-content>\n    </ng-container>\n\n    <ng-template #codeTemplate>\n      <ng-container *ngIf=\"isWindowHTML; else windowTs\">\n        <ng-content select=\"[component-html]\"></ng-content>\n      </ng-container>\n    </ng-template>\n\n    <ng-template #windowTs>\n      <ng-content select=\"[component-ts]\"></ng-content>\n    </ng-template>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-viewer',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './viewer.component.html',\n  styleUrls: ['./viewer.component.scss']\n})\nexport class ViewerComponent {\n  @Input() public title!: string;\n  @Input() public isNavCode: boolean = false;\n\n  public isOpenCode: boolean = false;\n  public isWindowHTML: boolean = true;\n\n  get linkCode(): string {\n    return this.isOpenCode ? 'Esconder codigo' : 'Mostrar codigo';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Breadcrumb } from '../../models/breadcrumb.models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BreadcrumbService {\n  public breadcrumb$ = new BehaviorSubject<Breadcrumb>({\n    actualRoute: { name: '' },\n    routes: [],\n    url: ''\n  });\n}\n","<nav aria-label=\"breadcrumb\">\n  <ol class=\"breadcrumb\">\n    <li class=\"breadcrumb-item\"><a [routerLink]=\"['/']\">Inicio</a></li>\n    <li class=\"breadcrumb-item\" *ngFor=\"let route of routes; index as i\">\n      <a *ngIf=\"i !== routes.length - 1; else nameDefault\" [routerLink]=\"[route.url]\">\n        {{ route.name }}\n      </a>\n      <ng-template #nameDefault>{{ route?.name }}</ng-template>\n    </li>\n  </ol>\n</nav>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Event, NavigationEnd, Router, RouterEvent, RouterModule } from '@angular/router';\nimport { filter, startWith, Subject, takeUntil } from 'rxjs';\nimport { BreadcrumbService } from '../../core/services/breadcrumb/breadcrumb.service';\nimport { BreadcrumbRoute } from '../../core/models/breadcrumb.models';\n\n@Component({\n  selector: 'o-breadcrumb',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  templateUrl: './o-breadcrumb.component.html',\n  styleUrls: ['./o-breadcrumb.component.scss']\n})\nexport class OBreadcrumbComponent implements OnInit, OnDestroy {\n  public routes: BreadcrumbRoute[] = [];\n  public actualRoute!: BreadcrumbRoute;\n\n  private url!: string;\n  private onDestroy$ = new Subject<void>();\n\n  constructor(private readonly router: Router, private readonly breadcrumbService: BreadcrumbService) {}\n\n  ngOnInit(): void {\n    this.breadcrumbService.breadcrumb$.pipe(takeUntil(this.onDestroy$)).subscribe((breadcrumb) => {\n      if (\n        Object.entries(breadcrumb).length !== 0 &&\n        breadcrumb.routes.length !== 0 &&\n        breadcrumb.actualRoute.name !== '' &&\n        breadcrumb.url !== ''\n      ) {\n        this.routes = breadcrumb.routes;\n        this.actualRoute = breadcrumb.actualRoute;\n        this.url = breadcrumb.url;\n        this.getReversedRoutes();\n      }\n    });\n    if (this.routes.length === 0 && !this.actualRoute) {\n      this.getPaths();\n      return;\n    }\n  }\n\n  private getPaths(): void {\n    this.router.events\n      .pipe(\n        takeUntil(this.onDestroy$),\n        filter((event) => event instanceof NavigationEnd),\n        startWith(this.router)\n      )\n      .subscribe({\n        next: (event: any) => {\n          event = event as RouterEvent;\n          this.routes = [];\n          event.url\n            .split('/')\n            .forEach(\n              (item: string, index: number) =>\n                (item !== '' || isNaN(+item) || item.length > 2) &&\n                this.routes.push({ name: this.formatedName(item), url: this.formatedUrl(item, event.url) })\n            );\n        }\n      });\n  }\n\n  private formatedName(path: string): string {\n    return (path && path[0].toUpperCase() + path.split('-').join(' ').slice(1)) || '';\n  }\n\n  private formatedUrl(url: string, route: string): string {\n    return route.split(url)[0] + url;\n  }\n\n  private getReversedRoutes(): void {\n    if (!this.actualRoute) {\n      this.actualRoute = this.routes[this.routes.length - 1];\n      this.routes.pop();\n    }\n\n    this.routes = [...this.routes].reverse();\n    this.routes = [...this.routes, this.actualRoute];\n    this.routes = this.routes.map((route) => (!route.url ? { ...route, url: `/${this.url}/${route.id}` } : route));\n  }\n\n  ngOnDestroy(): void {\n    this.onDestroy$.next();\n    this.onDestroy$.complete();\n  }\n}\n","import { Component } from '@angular/core';\nimport { BREADCRUMB_INTERFACE1, BREADCRUMB_INTERFACE2 } from 'src/app/constants/breadcrumb.constants';\n\n@Component({\n  selector: 'app-breadcrumb-api',\n  templateUrl: './breadcrumb-api.component.html',\n  styleUrls: ['./breadcrumb-api.component.scss']\n})\nexport class BreadcrumbApiComponent {\n  public exampleInterface1 = BREADCRUMB_INTERFACE1;\n  public exampleInterface2 = BREADCRUMB_INTERFACE2;\n}\n","<section class=\"section-api\">\n  <div class=\"section-title\">\n    <h2>Referencia de API para el componente Pan de miga de Obelisco</h2>\n    <pre class=\"code import\">\n      <code appPrism language=\"javascript\" code=\"import { OBreadcrumbComponent } from 'ngx-obelisco';\"></code>\n    </pre>\n  </div>\n\n  <h3>Etiqueta</h3>\n  <hr />\n\n  <div class=\"section-selector\">\n    <h4>OBreadcrumb</h4>\n    <p>Selector: <strong>o-breadcrumb</strong></p>\n\n    <div class=\"section-properties\">\n      <h5>Como se usa</h5>\n\n      <p>\n        Se puede usar agregando su etiqueta en el html para detectar desde la url que par√°metros agregar al breadcrumb.\n      </p>\n\n      <pre class=\"code import\">\n        <code appPrism language=\"javascript\" code=\"import { BreadCrumbService } from 'ngx-obelisco';\"></code>\n      </pre>\n\n      <p>\n        De otra forma se tiene que importar el servicio <strong>BreadCrumbService</strong> desde el componente a quien\n        le queremos cambiar o personalizar el breadcrumb y agregar el valor al BehaviorSubject\n        <strong>breadcrumb$</strong> la ruta actual, las rutas y la url de la siguiente manera:\n      </p>\n    </div>\n\n    <div class=\"section-type\">\n      <h4>Breadcrumb</h4>\n      <p>Permite establecer los valores de la propiedad <strong>breadcrumb$</strong>.</p>\n\n      <div class=\"section-interface\">\n        <pre class=\"code import\">\n          <code appPrism language=\"javascript\">{{ exampleInterface1 }}</code>\n        </pre>\n      </div>\n\n      <div class=\"section-interface\">\n        <pre class=\"code import\">\n          <code appPrism language=\"javascript\">{{ exampleInterface2 }}</code>\n        </pre>\n      </div>\n    </div>\n  </div>\n</section>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BreadcrumbApiComponent } from './pages/breadcrumb-api/breadcrumb-api.component';\nimport { BreadcrumbExamplesComponent } from './pages/breadcrumb-examples/breadcrumb-examples.component';\nimport { BreadcrumbOverviewComponent } from './pages/breadcrumb-overview/breadcrumb-overview.component';\n\nconst routes: Routes = [\n  { path: 'overview', component: BreadcrumbOverviewComponent },\n  { path: 'api', component: BreadcrumbApiComponent },\n  { path: 'examples', component: BreadcrumbExamplesComponent },\n  { path: '**', pathMatch: 'full', redirectTo: 'overview' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BreadcrumbRoutingModule {}\n","import { Component } from '@angular/core';\nimport { BREADCRUMB_BEST_PRACTICES } from 'src/app/constants/breadcrumb.constants';\n\n@Component({\n  selector: 'app-breadcrumb-overview',\n  templateUrl: './breadcrumb-overview.component.html',\n  styleUrls: ['./breadcrumb-overview.component.scss']\n})\nexport class BreadcrumbOverviewComponent {\n  public bestPractices = BREADCRUMB_BEST_PRACTICES;\n}\n","<section class=\"section-overview\">\n  <p class=\"lead\">\n    Las migas de pan brindan un sistema de navegaci√≥n secundaria y muestran el contexto para ayudar a los usuarios a\n    comprender d√≥nde se encuentran.\n  </p>\n\n  <h2>Tipos de migas de pan</h2>\n\n  <h3>Desktop</h3>\n  <p>\n    Las rutas de navegaci√≥n muestran d√≥nde se encuentra la p√°gina actual en la jerarqu√≠a del sitio web. Utilizar migas\n    de pan refuerza la estructura del sitio. En desktop, se ve completo.\n  </p>\n\n  <h3>Mobile</h3>\n\n  <p>Mientras que en dispositivos m√≥viles, se ve de manera reducida, solo para permitir un regreso.</p>\n\n  <div class=\"section-design\">\n    <h2>Dise√±o y estructura (Contexto de uso)</h2>\n\n    <h3>Desktop</h3>\n\n    <p>\n      Se ubican sobre el t√≠tulo de la p√°gina y muestran el progreso jer√°rquico desde el nivel de elemento m√°s alto hasta\n      el m√°s bajo. Los niveles que posean m√°s de 30 caracteres se truncar√°n y agregar√°n tres puntos (‚Ä¶) al final para\n      visualizar que hay m√°s texto en dicho nivel.\n    </p>\n  </div>\n\n  <img\n    class=\"card-img-top\"\n    src=\"https://gcba.github.io/estandares/componentes/breadcrumb/breadcrumb.png\"\n    alt=\"imagen sobre carteles de alerta\"\n  />\n\n  <div class=\"section-usability\">\n    <h2>Usabilidad</h2>\n\n    <app-best-practices [practices]=\"bestPractices\"></app-best-practices>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { BreadcrumbService } from 'projects/ngx-obelisco/src/public-api';\nimport { BREADCRUMB_EXAMPLE_TS } from 'src/app/constants/breadcrumb.constants';\n\n@Component({\n  selector: 'app-breadcrumb-examples',\n  templateUrl: './breadcrumb-examples.component.html',\n  styleUrls: ['./breadcrumb-examples.component.scss']\n})\nexport class BreadcrumbExamplesComponent implements OnInit {\n  public exampleTS = BREADCRUMB_EXAMPLE_TS;\n  constructor(private readonly breadcrumb: BreadcrumbService) {}\n\n  ngOnInit(): void {\n    this.breadcrumb.breadcrumb$.next({\n      actualRoute: { name: 'ruta actual' },\n      routes: [\n        { name: 'ruta 1', id: '1' },\n        { name: 'ruta 2', id: '5', url: '/routes-2/5' }\n      ],\n      url: 'url-ruta'\n    });\n  }\n}\n","<section class=\"section-example\">\n  <app-viewer title=\"Simple\">\n    <nav aria-label=\"breadcrumb\" component>\n      <ol class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\">\n          <a [routerLink]=\"['/']\">Inicio</a>\n        </li>\n        <li class=\"breadcrumb-item\">\n          <a [routerLink]=\"['/components']\">Components</a>\n        </li>\n        <li class=\"breadcrumb-item\">\n          <a [routerLink]=\"['/components/breadcrumb']\">Breadcrumb</a>\n        </li>\n        <li class=\"breadcrumb-item\">Examples</li>\n      </ol>\n    </nav>\n\n    <pre appClipboard component-html class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism language=\"html\" code=\"<o-breadcrumb></o-breadcrumb>\"></code>\n    </pre>\n  </app-viewer>\n\n  <app-viewer title=\"Selecci√≥n √∫nica\" [isNavCode]=\"true\">\n    <o-breadcrumb component></o-breadcrumb>\n\n    <pre appClipboard component-html class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism language=\"html\" code=\"<o-breadcrumb></o-breadcrumb>\"></code>\n    </pre>\n\n    <pre appClipboard component-ts class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism language=\"javascript\">{{ exampleTS }}</code>\n    </pre>\n  </app-viewer>\n</section>\n","import { BestPracticesComponent } from './../../../components/best-practices/best-practices.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OBreadcrumbComponent, ONavModule } from 'projects/ngx-obelisco/src/public-api';\n\nimport { BreadcrumbRoutingModule } from './breadcrumb-routing.module';\nimport { BreadcrumbComponent } from './breadcrumb.component';\nimport { BreadcrumbApiComponent } from './pages/breadcrumb-api/breadcrumb-api.component';\nimport { BreadcrumbExamplesComponent } from './pages/breadcrumb-examples/breadcrumb-examples.component';\nimport { BreadcrumbOverviewComponent } from './pages/breadcrumb-overview/breadcrumb-overview.component';\nimport { ViewerComponent } from 'src/app/components/viewer/viewer.component';\nimport { ClipboardDirective } from 'src/app/shared/directives/copy/clipboard.directive';\nimport { PrismDirective } from 'src/app/shared/directives/prism/prism.directive';\n\n@NgModule({\n  declarations: [BreadcrumbComponent, BreadcrumbApiComponent, BreadcrumbExamplesComponent, BreadcrumbOverviewComponent],\n  imports: [\n    CommonModule,\n    BreadcrumbRoutingModule,\n    ONavModule,\n    BestPracticesComponent,\n    ViewerComponent,\n    OBreadcrumbComponent,\n    ClipboardDirective,\n    PrismDirective\n  ]\n})\nexport class BreadcrumbModule {}\n","import { AfterViewInit, Directive, ElementRef, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appClipboard]',\n  standalone: true\n})\nexport class ClipboardDirective implements AfterViewInit {\n  constructor(private readonly host: ElementRef, private readonly renderer: Renderer2) {}\n\n  ngAfterViewInit(): void {\n    if (navigator.clipboard) {\n      const button = this.host.nativeElement.closest('pre').querySelector('button');\n      this.renderer.listen(button, 'click', this.clipboard);\n    }\n  }\n\n  public clipboard(event: PointerEvent): void {\n    const button = event.target as HTMLButtonElement;\n    const pre = button?.parentElement;\n    const code = pre?.querySelector('code');\n    const text = code?.innerText;\n    navigator.clipboard.writeText(text!);\n    button.innerText = 'Codigo copiado!';\n\n    setTimeout(() => {\n      button.innerText = 'Copiar';\n    }, 1000);\n  }\n}\n"],"x_google_ignoreList":[]}