{"version":3,"file":"874.59833900ab5de1c8.js","mappings":"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","names":["i0","OTableComponent","constructor","renderer","this","EventEmitter","ngOnInit","componentValidations","ngAfterViewInit","checkbox","map","e","inputCheckArr","push","nativeElement","isValidateComponent","displayedColumns","length","dataSource","Error","key","value","trim","charAt","toUpperCase","slice","toLowerCase","match","allSelected","$event","checked","setAttribute","DataSelectedArr","dataSelected","emit","selectedRow","index","indexOf","filter","_","i","selectors","CommonModule","i1","ViewerComponent","linkCode","isOpenCode","OGalleryComponent","GalleryApiComponent","GALLERY_DATA_SOURCE","COLUMNS","GALLERY_INTERFACE_IMAGE_ITEM","routes","path","component","GalleryOverviewComponent","GalleryExamplesComponent","IMAGES_LIST_3","IMAGES_LIST_1","IMAGES_LIST_2","IMAGES_LIST_4","IMAGES_LIST_5","IMAGES_LIST_6","IMAGES_LIST_7","GALLERY_EXAMPLE_INTERACTIVE_HTML","GALLERY_EXAMPLE_INTERACTIVE_TS","GALLERY_EXAMPLE_IMAGES_LIST_HTML","GALLERY_EXAMPLE_IMAGES_LIST_1_TS","GALLERY_EXAMPLE_IMAGES_LIST_2_TS","GALLERY_EXAMPLE_IMAGES_LIST_3_TS","GALLERY_EXAMPLE_IMAGES_LIST_4_TS","GALLERY_EXAMPLE_IMAGES_LIST_5_TS","GALLERY_EXAMPLE_IMAGES_LIST_6_TS","GALLERY_EXAMPLE_IMAGES_LIST_7_TS","pathMatch","redirectTo","GalleryRoutingModule","RouterModule","GalleryModule","ONavModule","ClipboardDirective","host","navigator","clipboard","button","closest","querySelector","listen","event","target","pre","parentElement","code","Z","writeText","T","innerText","setTimeout"],"sourceRoot":"webpack:///","sources":["./projects/ngx-obelisco/src/lib/components/o-table/o-table.component.html","./projects/ngx-obelisco/src/lib/components/o-table/o-table.component.ts","./src/app/components/viewer/viewer.component.html","./src/app/components/viewer/viewer.component.ts","./projects/ngx-obelisco/src/lib/components/o-gallery/o-gallery.component.html","./projects/ngx-obelisco/src/lib/components/o-gallery/o-gallery.component.ts","./src/app/modules/section-components/gallery/pages/gallery-api/gallery-api.component.ts","./src/app/modules/section-components/gallery/pages/gallery-api/gallery-api.component.html","./src/app/modules/section-components/gallery/gallery-routing.module.ts","./src/app/modules/section-components/gallery/pages/gallery-overview/gallery-overview.component.ts","./src/app/modules/section-components/gallery/pages/gallery-overview/gallery-overview.component.html","./src/app/modules/section-components/gallery/pages/gallery-examples/gallery-examples.component.ts","./src/app/modules/section-components/gallery/pages/gallery-examples/gallery-examples.component.html","./src/app/modules/section-components/gallery/gallery.module.ts","./src/app/shared/directives/copy/clipboard.directive.ts"],"sourcesContent":["<table\n  *ngIf=\"isValidateComponent\"\n  class=\"table\"\n  [ngClass]=\"{ 'table-bordered': isBordered, 'table-striped': isStriped, 'table-hover': isHover }\"\n>\n  <thead>\n    <tr>\n      <th scope=\"col\" *ngIf=\"isSelectable\">\n        <input type=\"checkbox\" aria-label=\"checkbox\" (change)=\"allSelected($event.target)\" />\n      </th>\n      <th scope=\"col\" *ngFor=\"let column of displayedColumns\">{{ column.value }}</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let data of dataSource\">\n      <td *ngIf=\"isSelectable\">\n        <input #checkbox type=\"checkbox\" aria-label=\"checkbox\" (change)=\"selectedRow($event.target)\" />\n      </td>\n      <td *ngFor=\"let column of displayedColumns\" [innerHTML]=\"data[column.key]\"></td>\n    </tr>\n  </tbody>\n</table>\n","import { CommonModule } from '@angular/common';\nimport {\n  OnInit,\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  ViewChildren,\n  Renderer2\n} from '@angular/core';\nimport { Column } from '../../core/models/table.models';\n\n@Component({\n  selector: 'o-table',\n  templateUrl: './o-table.component.html',\n  styleUrls: ['./o-table.component.scss'],\n  standalone: true,\n  imports: [CommonModule]\n})\nexport class OTableComponent implements OnInit, AfterViewInit {\n  public isValidateComponent: boolean = false;\n\n  @Input() public displayedColumns: Column[] = [];\n  @Input() public dataSource: any[] = [];\n  @Input() public isBordered: boolean = false;\n  @Input() public isStriped: boolean = false;\n  @Input() public isHover: boolean = false;\n  @Input() public isSelectable: boolean = false;\n  @Output() public dataSelected = new EventEmitter<any>();\n\n  private inputCheckArr: ElementRef[] = [];\n  private DataSelectedArr: any[] = [];\n\n  @ViewChildren('checkbox') public checkbox!: QueryList<ElementRef>;\n\n  constructor(private readonly renderer: Renderer2) {}\n\n  public ngOnInit(): void {\n    this.componentValidations();\n  }\n\n  public ngAfterViewInit(): void {\n    this.checkbox.map((e) => {\n      this.inputCheckArr.push(e.nativeElement);\n    });\n  }\n\n  /**\n   * @description\n   * This method is used to validate the component\n   * For this component to work, the following conditions must be met:\n   * 1. The displayedColumns and displayedColumns property must be filled\n   * 2. The displayedColumns property must be has \"values\" and \"keys\" not null\n   * 3. The displayedColumns is trimmed for spaces\n   * 4. The displayedColumns is converted to capitalization\n   * 5. The displayedColumns is validated if \"value\" contains numbers or special characters and \"key\" contains numbers, special characters or accents\n   * @returns void\n   */\n  private componentValidations(): void {\n    this.isValidateComponent = this.displayedColumns.length > 0 && this.dataSource.length > 0;\n\n    if (!this.isValidateComponent) {\n      throw new Error('The displayedColumns and dataSource must not be empty');\n    }\n\n    this.displayedColumns.map((e) => {\n      if (e.key === '' || e.value === '') {\n        this.isValidateComponent = false;\n        throw new Error('The displayedColumns must not have null values');\n      }\n    });\n\n    this.displayedColumns.map((e) => (e.value = e.value.trim()));\n\n    this.displayedColumns = this.displayedColumns.map((e) => {\n      e.value = e.value.charAt(0).toUpperCase() + e.value.slice(1).toLowerCase();\n      return e;\n    });\n\n    this.displayedColumns.map((e) => {\n      if (e.value.match(/^[a-zA-ZáéíóúÁÉÍÓÚñÑ ]*$/) && e.key.match(/^[a-zA-Z ]*$/)) {\n        this.isValidateComponent = true;\n        return e;\n      } else {\n        this.isValidateComponent = false;\n        throw new Error(\n          'The displayedColumns value must not contain numbers or symbols and the key must not contain numbers, symbols or accents'\n        );\n      }\n    });\n  }\n\n  public allSelected($event: any): void {\n    if (!$event.checked) {\n      this.checkbox.map((e) => this.renderer.setAttribute(e.nativeElement, 'checked', 'false'));\n      this.DataSelectedArr = [];\n    } else {\n      this.checkbox.map((e) => this.renderer.setAttribute(e.nativeElement, 'checked', 'true'));\n      this.DataSelectedArr = this.dataSource;\n    }\n\n    this.dataSelected.emit(this.DataSelectedArr);\n  }\n\n  public selectedRow($event: any): void {\n    const index = this.inputCheckArr.indexOf($event);\n\n    if ($event.checked) {\n      this.DataSelectedArr.push(this.dataSource[index]);\n    } else {\n      this.DataSelectedArr = this.DataSelectedArr.filter((_, i) => i !== index);\n    }\n\n    this.dataSelected.emit(this.DataSelectedArr);\n  }\n}\n","<div class=\"example-wrapper\">\n  <div class=\"example-viewer\">\n    <p>{{ title }}</p>\n    <nav>\n      <ul class=\"nav flex-row nav-pills\">\n        <li class=\"nav-item d-flex\">\n          <a class=\"nav-link\" [class.active]=\"isOpenCode\" (click)=\"isOpenCode = !isOpenCode\">\n            <span>{{ linkCode }}</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n  </div>\n  <div class=\"wrapper\">\n    <nav *ngIf=\"isOpenCode && isNavCode\">\n      <ul class=\"nav flex-row nav-pills\">\n        <li class=\"nav-item d-flex\">\n          <a class=\"nav-link\" [class.active]=\"isWindowHTML\" (click)=\"isWindowHTML = true\">\n            <span>HTML</span>\n          </a>\n          <a class=\"nav-link\" [class.active]=\"!isWindowHTML\" (click)=\"isWindowHTML = false\">\n            <span>TS</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n    <ng-container *ngIf=\"!isOpenCode; else codeTemplate\">\n      <ng-content select=\"[component]\"></ng-content>\n    </ng-container>\n\n    <ng-template #codeTemplate>\n      <ng-container *ngIf=\"isWindowHTML; else windowTs\">\n        <ng-content select=\"[component-html]\"></ng-content>\n      </ng-container>\n    </ng-template>\n\n    <ng-template #windowTs>\n      <ng-content select=\"[component-ts]\"></ng-content>\n    </ng-template>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-viewer',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './viewer.component.html',\n  styleUrls: ['./viewer.component.scss']\n})\nexport class ViewerComponent {\n  @Input() public title!: string;\n  @Input() public isNavCode: boolean = false;\n\n  public isOpenCode: boolean = false;\n  public isWindowHTML: boolean = true;\n\n  get linkCode(): string {\n    return this.isOpenCode ? 'Esconder codigo' : 'Mostrar codigo';\n  }\n}\n","<div class=\"gallery-grid\" [ngClass]=\"['gallery-max-' + images.length]\">\n  <ng-container *ngIf=\"isInteractive; else noInteractive\">\n    <a\n      *ngFor=\"let image of images\"\n      [href]=\"image.src\"\n      [attr.data-target]=\"'#' + dataTarget\"\n      class=\"gallery-grid-item\"\n      data-toggle=\"modal\"\n    >\n      <img oDefaultImage [src]=\"image.src\" [alt]=\"image.title\" />\n    </a>\n  </ng-container>\n  <ng-template #noInteractive>\n    <div class=\"gallery-grid-item\" *ngFor=\"let image of images\">\n      <img oDefaultImage [src]=\"image.src\" [alt]=\"image.title\" />\n    </div>\n  </ng-template>\n</div>\n\n<div\n  *ngIf=\"isInteractive\"\n  [id]=\"dataTarget\"\n  class=\"modal modal-carousel\"\n  data-backdrop=\"static\"\n  tabindex=\"-1\"\n  role=\"dialog\"\n>\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <a class=\"modal-carousel-close\" data-dismiss=\"modal\">Cerrar ventana</a>\n      <div [id]=\"dataTarget + 'control'\" class=\"carousel\" data-ride=\"carousel\" data-interval=\"false\">\n        <div class=\"carousel-inner\">\n          <ng-container *ngFor=\"let image of images; index as i\">\n            <div class=\"carousel-item\" [class.active]=\"i === 0\">\n              <img oDefaultImage class=\"d-block w-100\" [src]=\"image.src\" [alt]=\"image.title\" />\n              <div class=\"carousel-caption\">\n                <div class=\"row mb-4\">\n                  <div class=\"col\">\n                    <small>{{ image.author }}</small>\n                  </div>\n                  <div class=\"col text-right\">\n                    <small>Imagen {{ i + 1 }} / {{ images.length }}</small>\n                  </div>\n                </div>\n                <h5 class=\"h2\">{{ image.title }}</h5>\n                <p [innerHTML]=\"image.description\"></p>\n              </div>\n            </div>\n          </ng-container>\n        </div>\n        <button\n          class=\"carousel-control-prev\"\n          type=\"button\"\n          [attr.data-target]=\"'#' + dataTarget + 'control'\"\n          data-slide=\"prev\"\n        >\n          <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n          <span class=\"sr-only\">Anterior</span>\n        </button>\n        <button\n          class=\"carousel-control-next\"\n          type=\"button\"\n          [attr.data-target]=\"'#' + dataTarget + 'control'\"\n          data-slide=\"next\"\n        >\n          <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n          <span class=\"sr-only\">Siguiente</span>\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { Image } from '../../core/models/gallery.models';\nimport { DefaultImageDirective } from '../../shared/directives/img-broken/img-broken.directive';\n\n@Component({\n  selector: 'o-gallery',\n  standalone: true,\n  imports: [CommonModule, DefaultImageDirective],\n  templateUrl: './o-gallery.component.html',\n  styleUrls: ['./o-gallery.component.scss']\n})\nexport class OGalleryComponent {\n  @Input() public images: Image[] = [];\n  @Input() public isInteractive: boolean = false;\n  @Input() public dataTarget!: string;\n}\n","import { Component } from '@angular/core';\nimport { COLUMNS } from 'src/app/constants/components.constants';\nimport { GALLERY_DATA_SOURCE, GALLERY_INTERFACE_IMAGE_ITEM } from 'src/app/constants/gallery.constans';\n\n@Component({\n  selector: 'app-gallery-api',\n  templateUrl: './gallery-api.component.html',\n  styleUrls: ['./gallery-api.component.scss']\n})\nexport class GalleryApiComponent {\n  public dataSourceGallery = GALLERY_DATA_SOURCE;\n  public columnsGallery = COLUMNS;\n  public exampleIterfaceImageItem = GALLERY_INTERFACE_IMAGE_ITEM;\n}\n","<section class=\"section-api\">\n  <div class=\"section-title\">\n    <h2>Referencia de API para el componente Galería de Obelisco</h2>\n    <pre class=\"code import\">\n      <code appPrism code=\"import { OGalleryComponent } from 'ngx-obelisco';\"></code>\n    </pre>\n  </div>\n\n  <h3>Etiqueta</h3>\n  <hr />\n\n  <div class=\"section-selector\">\n    <h4>OGallery</h4>\n    <p>Selector: <strong>o-gallery</strong></p>\n\n    <div class=\"section-properties\">\n      <h5>Propiedades</h5>\n\n      <o-table\n        [displayedColumns]=\"columnsGallery\"\n        [dataSource]=\"dataSourceGallery\"\n        [isStriped]=\"true\"\n        [isBordered]=\"true\"\n      ></o-table>\n    </div>\n  </div>\n\n  <h3>Tipos de datos</h3>\n  <hr />\n\n  <div class=\"section-type\">\n    <h4>ImageItem</h4>\n    <p>Permite establecer los valores de la propiedad <strong>images</strong>.</p>\n\n    <div class=\"section-interface\">\n      <pre class=\"code\">\n        <code appPrism>{{ exampleIterfaceImageItem }}</code>\n        </pre>\n    </div>\n  </div>\n</section>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GalleryApiComponent } from './pages/gallery-api/gallery-api.component';\nimport { GalleryExamplesComponent } from './pages/gallery-examples/gallery-examples.component';\nimport { GalleryOverviewComponent } from './pages/gallery-overview/gallery-overview.component';\n\nconst routes: Routes = [\n  { path: 'overview', component: GalleryOverviewComponent },\n  { path: 'api', component: GalleryApiComponent },\n  { path: 'examples', component: GalleryExamplesComponent },\n  { path: '**', pathMatch: 'full', redirectTo: 'overview' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GalleryRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-gallery-overview',\n  templateUrl: './gallery-overview.component.html',\n  styleUrls: ['./gallery-overview.component.scss']\n})\nexport class GalleryOverviewComponent {}\n","<section class=\"section-overview\">\n  <p class=\"lead\">\n    El componente Galería de imágenes permite mostrar una colección de imágenes relacionadas en una página.\n  </p>\n\n  <h2>Tipos de Galería</h2>\n  <p>\n    Las listas de imágenes muestran una colección de imágenes en un grilla organizado. Ayudan a mejorar la comprensión\n    visual del contenido que manejan.\n  </p>\n\n  <h3>Galería - Interactiva</h3>\n\n  <p>Use la galería interactiva para recorrer diferentes imágenes.</p>\n\n  <h3>Galería - Grilla</h3>\n\n  <p>El componente tomará un estilo de grilla determinado por la cantidad de imágenes que se le asigne mostrar.</p>\n\n  <div class=\"section-design\">\n    <h2>Diseño y estructura (Contexto de uso)</h2>\n\n    <h3>En cuerpo de página</h3>\n\n    <p>\n      Es un recurso muy útil cuando necesitas mostrar una serie de fotos en una página o artículo de tu sitio web. Te\n      permite agruparlas y mostrarlas de una forma más profesionales\n    </p>\n  </div>\n</section>\n","import { Component } from '@angular/core';\nimport {\n  GALLERY_EXAMPLE_IMAGES_LIST_1_TS,\n  GALLERY_EXAMPLE_IMAGES_LIST_2_TS,\n  GALLERY_EXAMPLE_IMAGES_LIST_3_TS,\n  GALLERY_EXAMPLE_IMAGES_LIST_4_TS,\n  GALLERY_EXAMPLE_IMAGES_LIST_5_TS,\n  GALLERY_EXAMPLE_IMAGES_LIST_6_TS,\n  GALLERY_EXAMPLE_IMAGES_LIST_7_TS,\n  GALLERY_EXAMPLE_IMAGES_LIST_HTML,\n  GALLERY_EXAMPLE_INTERACTIVE_HTML,\n  GALLERY_EXAMPLE_INTERACTIVE_TS,\n  IMAGES_LIST_1,\n  IMAGES_LIST_2,\n  IMAGES_LIST_3,\n  IMAGES_LIST_4,\n  IMAGES_LIST_5,\n  IMAGES_LIST_6,\n  IMAGES_LIST_7\n} from 'src/app/constants/gallery.constans';\n\n@Component({\n  selector: 'app-gallery-examples',\n  templateUrl: './gallery-examples.component.html',\n  styleUrls: ['./gallery-examples.component.scss']\n})\nexport class GalleryExamplesComponent {\n  public imagesListInteractive = IMAGES_LIST_3;\n  public imagesList1 = IMAGES_LIST_1;\n  public imagesList2 = IMAGES_LIST_2;\n  public imagesList3 = IMAGES_LIST_3;\n  public imagesList4 = IMAGES_LIST_4;\n  public imagesList5 = IMAGES_LIST_5;\n  public imagesList6 = IMAGES_LIST_6;\n  public imagesList7 = IMAGES_LIST_7;\n  public exampleInteractiveHTML = GALLERY_EXAMPLE_INTERACTIVE_HTML;\n  public exampleInteractiveTS = GALLERY_EXAMPLE_INTERACTIVE_TS;\n  public exampleImagesListHTML = GALLERY_EXAMPLE_IMAGES_LIST_HTML;\n  public exampleImagesList1TS = GALLERY_EXAMPLE_IMAGES_LIST_1_TS;\n  public exampleImagesList2TS = GALLERY_EXAMPLE_IMAGES_LIST_2_TS;\n  public exampleImagesList3TS = GALLERY_EXAMPLE_IMAGES_LIST_3_TS;\n  public exampleImagesList4TS = GALLERY_EXAMPLE_IMAGES_LIST_4_TS;\n  public exampleImagesList5TS = GALLERY_EXAMPLE_IMAGES_LIST_5_TS;\n  public exampleImagesList6TS = GALLERY_EXAMPLE_IMAGES_LIST_6_TS;\n  public exampleImagesList7TS = GALLERY_EXAMPLE_IMAGES_LIST_7_TS;\n}\n","<section class=\"section-example\">\n  <app-viewer title=\"Interactiva\" [isNavCode]=\"true\">\n    <div component class=\"container\">\n      <o-gallery [images]=\"imagesListInteractive\" [isInteractive]=\"true\" dataTarget=\"modalGallery\"></o-gallery>\n    </div>\n    <pre appClipboard component-html class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism language=\"html\">{{exampleInteractiveHTML}}</code>\n    </pre>\n\n    <pre appClipboard component-ts class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism>{{exampleInteractiveTS}}</code>\n    </pre>\n  </app-viewer>\n\n  <app-viewer title=\"Grilla - cant. de imagenes: 1\" [isNavCode]=\"true\">\n    <div component class=\"container\">\n      <o-gallery [images]=\"imagesList1\"></o-gallery>\n    </div>\n    <pre appClipboard component-html class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism language=\"html\">{{exampleImagesListHTML}}</code>\n    </pre>\n\n    <pre appClipboard component-ts class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism>{{exampleImagesList1TS}}</code>\n    </pre>\n  </app-viewer>\n\n  <app-viewer title=\"Grilla - cant. de imagenes: 2\" [isNavCode]=\"true\">\n    <div component class=\"container\">\n      <o-gallery component [images]=\"imagesList2\"></o-gallery>\n    </div>\n    <pre appClipboard component-html class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism language=\"html\">{{exampleImagesListHTML}}</code>\n    </pre>\n\n    <pre appClipboard component-ts class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism>{{exampleImagesList2TS}}</code>\n    </pre>\n  </app-viewer>\n\n  <app-viewer title=\"Grilla - cant. de imagenes: 3\" [isNavCode]=\"true\">\n    <div component class=\"container\">\n      <o-gallery component [images]=\"imagesList3\"></o-gallery>\n    </div>\n    <pre appClipboard component-html class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism language=\"html\">{{exampleImagesListHTML}}</code>\n    </pre>\n\n    <pre appClipboard component-ts class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism>{{exampleImagesList3TS}}</code>\n    </pre>\n  </app-viewer>\n\n  <app-viewer title=\"Grilla - cant. de imagenes: 4\" [isNavCode]=\"true\">\n    <div component class=\"container\">\n      <o-gallery component [images]=\"imagesList4\"></o-gallery>\n    </div>\n    <pre appClipboard component-html class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism language=\"html\">{{exampleImagesListHTML}}</code>\n    </pre>\n\n    <pre appClipboard component-ts class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism>{{exampleImagesList4TS}}</code>\n    </pre>\n  </app-viewer>\n\n  <app-viewer title=\"Grilla - cant. de imagenes: 5\" [isNavCode]=\"true\">\n    <div component class=\"container\">\n      <o-gallery component [images]=\"imagesList5\"></o-gallery>\n    </div>\n    <pre appClipboard component-html class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism language=\"html\">{{exampleImagesListHTML}}</code>\n    </pre>\n\n    <pre appClipboard component-ts class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism>{{exampleImagesList5TS}}</code>\n    </pre>\n  </app-viewer>\n\n  <app-viewer title=\"Grilla - cant. de imagenes: 6\" [isNavCode]=\"true\">\n    <div component class=\"container\">\n      <o-gallery component [images]=\"imagesList6\"></o-gallery>\n    </div>\n    <pre appClipboard component-html class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism language=\"html\">{{exampleImagesListHTML}}</code>\n    </pre>\n\n    <pre appClipboard component-ts class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism>{{exampleImagesList6TS}}</code>\n    </pre>\n  </app-viewer>\n\n  <app-viewer title=\"Grilla - cant. de imagenes: 7\" [isNavCode]=\"true\">\n    <div component class=\"container\">\n      <o-gallery component [images]=\"imagesList7\"></o-gallery>\n    </div>\n    <pre appClipboard component-html class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism language=\"html\">{{exampleImagesListHTML}}</code>\n    </pre>\n\n    <pre appClipboard component-ts class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism>{{exampleImagesList7TS}}</code>\n    </pre>\n  </app-viewer>\n</section>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OGalleryComponent, ONavModule, OTableComponent } from 'projects/ngx-obelisco/src/public-api';\nimport { ViewerComponent } from 'src/app/components/viewer/viewer.component';\nimport { ClipboardDirective } from 'src/app/shared/directives/copy/clipboard.directive';\nimport { PrismDirective } from 'src/app/shared/directives/prism/prism.directive';\nimport { GalleryRoutingModule } from './gallery-routing.module';\nimport { GalleryComponent } from './gallery.component';\nimport { GalleryApiComponent } from './pages/gallery-api/gallery-api.component';\nimport { GalleryExamplesComponent } from './pages/gallery-examples/gallery-examples.component';\nimport { GalleryOverviewComponent } from './pages/gallery-overview/gallery-overview.component';\n\n@NgModule({\n  declarations: [GalleryComponent, GalleryApiComponent, GalleryExamplesComponent, GalleryOverviewComponent],\n  imports: [\n    CommonModule,\n    GalleryRoutingModule,\n    ONavModule,\n    OTableComponent,\n    OGalleryComponent,\n    ViewerComponent,\n    ClipboardDirective,\n    PrismDirective\n  ]\n})\nexport class GalleryModule {}\n","import { AfterViewInit, Directive, ElementRef, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appClipboard]',\n  standalone: true\n})\nexport class ClipboardDirective implements AfterViewInit {\n  constructor(private readonly host: ElementRef, private readonly renderer: Renderer2) {}\n\n  ngAfterViewInit(): void {\n    if (navigator.clipboard) {\n      const button = this.host.nativeElement.closest('pre').querySelector('button');\n      this.renderer.listen(button, 'click', this.clipboard);\n    }\n  }\n\n  public clipboard(event: PointerEvent): void {\n    const button = event.target as HTMLButtonElement;\n    const pre = button?.parentElement;\n    const code = pre?.querySelector('code');\n    const text = code?.innerText;\n    navigator.clipboard.writeText(text!);\n    button.innerText = 'Codigo copiado!';\n\n    setTimeout(() => {\n      button.innerText = 'Copiar';\n    }, 1000);\n  }\n}\n"],"x_google_ignoreList":[]}