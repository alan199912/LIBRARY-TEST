{"version":3,"file":"128.d1f5132bf825db89.js","mappings":"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","names":["i0","OTableComponent","constructor","renderer","this","EventEmitter","ngOnInit","componentValidations","ngAfterViewInit","checkbox","map","e","inputCheckArr","push","nativeElement","isValidateComponent","displayedColumns","length","dataSource","Error","key","value","trim","charAt","toUpperCase","slice","toLowerCase","match","allSelected","$event","checked","setAttribute","DataSelectedArr","dataSelected","emit","selectedRow","index","indexOf","filter","_","i","selectors","CommonModule","i1","BadPracticesComponent","BestPracticesComponent","ViewerComponent","linkCode","isOpenCode","CollapseInfoApiComponent","COLUMNS","name","description","COLLAPSE_INFO_INTERFACE","OCollapseInfoComponent","getLastCollapseInfoArr","collapseInfoArr","CollapseInfoExamplesComponent","header","body","footer","COLLAPSE_INFO_EXAMPLE_HTML","COLLAPSE_INFO_EXAMPLE_TS","routes","path","component","CollapseInfoOverviewComponent","COLLAPSE_BEST_PRACTIVES","COLLAPSE_BAD_PRACTICES","redirectTo","pathMatch","CollapseInfoRoutingModule","RouterModule","CollapseInfoModule","ONavModule","OCollapseModule","ClipboardDirective","host","navigator","clipboard","button","closest","querySelector","listen","event","target","pre","r","parentElement","code","c","writeText","g","innerText","setTimeout"],"sourceRoot":"webpack:///","sources":["./projects/ngx-obelisco/src/lib/components/o-table/o-table.component.html","./projects/ngx-obelisco/src/lib/components/o-table/o-table.component.ts","./src/app/components/bad-practices/bad-practices.component.html","./src/app/components/bad-practices/bad-practices.component.ts","./src/app/components/best-practices/best-practices.component.html","./src/app/components/best-practices/best-practices.component.ts","./src/app/components/viewer/viewer.component.html","./src/app/components/viewer/viewer.component.ts","./src/app/modules/section-components/collapse/collapse-info/pages/collapse-info-api/collapse-info-api.component.ts","./src/app/modules/section-components/collapse/collapse-info/pages/collapse-info-api/collapse-info-api.component.html","./projects/ngx-obelisco/src/lib/components/o-collapse/o-collapse-info/o-collapse-info.component.html","./projects/ngx-obelisco/src/lib/components/o-collapse/o-collapse-info/o-collapse-info.component.ts","./src/app/modules/section-components/collapse/collapse-info/pages/collapse-info-examples/collapse-info-examples.component.ts","./src/app/modules/section-components/collapse/collapse-info/pages/collapse-info-examples/collapse-info-examples.component.html","./src/app/modules/section-components/collapse/collapse-info/collapse-info-routing.module.ts","./src/app/modules/section-components/collapse/collapse-info/pages/collapse-info-overview/collapse-info-overview.component.ts","./src/app/modules/section-components/collapse/collapse-info/pages/collapse-info-overview/collapse-info-overview.component.html","./src/app/modules/section-components/collapse/collapse-info/collapse-info.module.ts","./src/app/shared/directives/copy/clipboard.directive.ts"],"sourcesContent":["<table\n  *ngIf=\"isValidateComponent\"\n  class=\"table\"\n  [ngClass]=\"{ 'table-bordered': isBordered, 'table-striped': isStriped, 'table-hover': isHover }\"\n>\n  <thead>\n    <tr>\n      <th scope=\"col\" *ngIf=\"isSelectable\">\n        <input type=\"checkbox\" aria-label=\"checkbox\" (change)=\"allSelected($event.target)\" />\n      </th>\n      <th scope=\"col\" *ngFor=\"let column of displayedColumns\">{{ column.value }}</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let data of dataSource\">\n      <td *ngIf=\"isSelectable\">\n        <input #checkbox type=\"checkbox\" aria-label=\"checkbox\" (change)=\"selectedRow($event.target)\" />\n      </td>\n      <td *ngFor=\"let column of displayedColumns\" [innerHTML]=\"data[column.key]\"></td>\n    </tr>\n  </tbody>\n</table>\n","import { CommonModule } from '@angular/common';\nimport {\n  OnInit,\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  ViewChildren,\n  Renderer2\n} from '@angular/core';\nimport { Column } from '../../core/models/table.models';\n\n@Component({\n  selector: 'o-table',\n  templateUrl: './o-table.component.html',\n  styleUrls: ['./o-table.component.scss'],\n  standalone: true,\n  imports: [CommonModule]\n})\nexport class OTableComponent implements OnInit, AfterViewInit {\n  public isValidateComponent: boolean = false;\n\n  @Input() public displayedColumns: Column[] = [];\n  @Input() public dataSource: any[] = [];\n  @Input() public isBordered: boolean = false;\n  @Input() public isStriped: boolean = false;\n  @Input() public isHover: boolean = false;\n  @Input() public isSelectable: boolean = false;\n  @Output() public dataSelected = new EventEmitter<any>();\n\n  private inputCheckArr: ElementRef[] = [];\n  private DataSelectedArr: any[] = [];\n\n  @ViewChildren('checkbox') public checkbox!: QueryList<ElementRef>;\n\n  constructor(private readonly renderer: Renderer2) {}\n\n  public ngOnInit(): void {\n    this.componentValidations();\n  }\n\n  public ngAfterViewInit(): void {\n    this.checkbox.map((e) => {\n      this.inputCheckArr.push(e.nativeElement);\n    });\n  }\n\n  /**\n   * @description\n   * This method is used to validate the component\n   * For this component to work, the following conditions must be met:\n   * 1. The displayedColumns and displayedColumns property must be filled\n   * 2. The displayedColumns property must be has \"values\" and \"keys\" not null\n   * 3. The displayedColumns is trimmed for spaces\n   * 4. The displayedColumns is converted to capitalization\n   * 5. The displayedColumns is validated if \"value\" contains numbers or special characters and \"key\" contains numbers, special characters or accents\n   * @returns void\n   */\n  private componentValidations(): void {\n    this.isValidateComponent = this.displayedColumns.length > 0 && this.dataSource.length > 0;\n\n    if (!this.isValidateComponent) {\n      throw new Error('The displayedColumns and dataSource must not be empty');\n    }\n\n    this.displayedColumns.map((e) => {\n      if (e.key === '' || e.value === '') {\n        this.isValidateComponent = false;\n        throw new Error('The displayedColumns must not have null values');\n      }\n    });\n\n    this.displayedColumns.map((e) => (e.value = e.value.trim()));\n\n    this.displayedColumns = this.displayedColumns.map((e) => {\n      e.value = e.value.charAt(0).toUpperCase() + e.value.slice(1).toLowerCase();\n      return e;\n    });\n\n    this.displayedColumns.map((e) => {\n      if (e.value.match(/^[a-zA-ZáéíóúÁÉÍÓÚñÑ ]*$/) && e.key.match(/^[a-zA-Z ]*$/)) {\n        this.isValidateComponent = true;\n        return e;\n      } else {\n        this.isValidateComponent = false;\n        throw new Error(\n          'The displayedColumns value must not contain numbers or symbols and the key must not contain numbers, symbols or accents'\n        );\n      }\n    });\n  }\n\n  public allSelected($event: any): void {\n    if (!$event.checked) {\n      this.checkbox.map((e) => this.renderer.setAttribute(e.nativeElement, 'checked', 'false'));\n      this.DataSelectedArr = [];\n    } else {\n      this.checkbox.map((e) => this.renderer.setAttribute(e.nativeElement, 'checked', 'true'));\n      this.DataSelectedArr = this.dataSource;\n    }\n\n    this.dataSelected.emit(this.DataSelectedArr);\n  }\n\n  public selectedRow($event: any): void {\n    const index = this.inputCheckArr.indexOf($event);\n\n    if ($event.checked) {\n      this.DataSelectedArr.push(this.dataSource[index]);\n    } else {\n      this.DataSelectedArr = this.DataSelectedArr.filter((_, i) => i !== index);\n    }\n\n    this.dataSelected.emit(this.DataSelectedArr);\n  }\n}\n","<div class=\"section-bad-practices\">\n  <h3>Malas prácticas</h3>\n\n  <ul class=\"usability\">\n    <li class=\"dont\" *ngFor=\"let practice of practices\">\n      <p [innerHTML]=\"practice\"></p>\n    </li>\n  </ul>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-bad-practices',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bad-practices.component.html',\n  styleUrls: ['./bad-practices.component.scss']\n})\nexport class BadPracticesComponent {\n  @Input() public practices: string[] = [];\n}\n","<div class=\"section-best-practices\">\n  <h3>Buenas prácticas</h3>\n\n  <ul class=\"usability\">\n    <li class=\"do\" *ngFor=\"let practice of practices\">\n      <p [innerHTML]=\"practice\"></p>\n    </li>\n  </ul>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-best-practices',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './best-practices.component.html',\n  styleUrls: ['./best-practices.component.scss']\n})\nexport class BestPracticesComponent {\n  @Input() public practices: string[] = [];\n}\n","<div class=\"example-wrapper\">\n  <div class=\"example-viewer\">\n    <p>{{ title }}</p>\n    <nav>\n      <ul class=\"nav flex-row nav-pills\">\n        <li class=\"nav-item d-flex\">\n          <a class=\"nav-link\" [class.active]=\"isOpenCode\" (click)=\"isOpenCode = !isOpenCode\">\n            <span>{{ linkCode }}</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n  </div>\n  <div class=\"wrapper\">\n    <nav *ngIf=\"isOpenCode && isNavCode\">\n      <ul class=\"nav flex-row nav-pills\">\n        <li class=\"nav-item d-flex\">\n          <a class=\"nav-link\" [class.active]=\"isWindowHTML\" (click)=\"isWindowHTML = true\">\n            <span>HTML</span>\n          </a>\n          <a class=\"nav-link\" [class.active]=\"!isWindowHTML\" (click)=\"isWindowHTML = false\">\n            <span>TS</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n    <ng-container *ngIf=\"!isOpenCode; else codeTemplate\">\n      <ng-content select=\"[component]\"></ng-content>\n    </ng-container>\n\n    <ng-template #codeTemplate>\n      <ng-container *ngIf=\"isWindowHTML; else windowTs\">\n        <ng-content select=\"[component-html]\"></ng-content>\n      </ng-container>\n    </ng-template>\n\n    <ng-template #windowTs>\n      <ng-content select=\"[component-ts]\"></ng-content>\n    </ng-template>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-viewer',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './viewer.component.html',\n  styleUrls: ['./viewer.component.scss']\n})\nexport class ViewerComponent {\n  @Input() public title!: string;\n  @Input() public isNavCode: boolean = false;\n\n  public isOpenCode: boolean = false;\n  public isWindowHTML: boolean = true;\n\n  get linkCode(): string {\n    return this.isOpenCode ? 'Esconder codigo' : 'Mostrar codigo';\n  }\n}\n","import { Component } from '@angular/core';\nimport { COLLAPSE_INFO_INTERFACE } from 'src/app/constants/collapse.constants';\nimport { COLUMNS } from 'src/app/constants/components.constants';\n\n@Component({\n  selector: 'app-collapse-info-api',\n  templateUrl: './collapse-info-api.component.html',\n  styleUrls: ['./collapse-info-api.component.scss']\n})\nexport class CollapseInfoApiComponent {\n  public columnsCollapse = COLUMNS;\n  public dataSourceCollapse = [\n    {\n      name: '@Input() <br/> title: string',\n      description: 'Se utiliza para mostrar el título del componente.'\n    },\n    {\n      name: '@Input() <br/> subtitle: string',\n      description: 'Se utiliza para mostrar el subtítulo del componente.'\n    },\n    {\n      name: '@Input() <br/> identifier: string',\n      description: 'Se utiliza para identificar el componente.'\n    },\n    {\n      name: '@Input() <br/> collapseInfoArr: CollapseInfo[]',\n      description: 'Se utiliza para mostrar la lista de información.'\n    }\n  ];\n  public exampleIterface = COLLAPSE_INFO_INTERFACE;\n}\n","<section class=\"section-api\">\n  <div class=\"section-title\">\n    <h2>Referencia de API para el componente Colapsable de Obelisco</h2>\n    <pre class=\"code import\">\n      <code appPrism language=\"javascript\" code=\"import { OCollapseModule } from 'ngx-obelisco';\"></code>\n    </pre>\n  </div>\n\n  <h3>Etiqueta</h3>\n  <hr />\n\n  <div class=\"section-selector\">\n    <h4>OCollapseInfo</h4>\n    <p>Selector: <strong>o-collapse-info</strong></p>\n\n    <div class=\"section-properties\">\n      <h5>Propiedades</h5>\n\n      <o-table\n        [displayedColumns]=\"columnsCollapse\"\n        [dataSource]=\"dataSourceCollapse\"\n        [isStriped]=\"true\"\n        [isBordered]=\"true\"\n      ></o-table>\n    </div>\n  </div>\n\n  <h3>Tipos de datos</h3>\n  <hr />\n\n  <div class=\"section-type\">\n    <h4>CollapseInfo</h4>\n    <p>Permite establecer los valores de la propiedad <strong>collapseInfoArr</strong>.</p>\n\n    <div class=\"section-interface\">\n      <pre class=\"code import\">\n        <code appPrism language=\"javascript\">{{ exampleIterface }}</code>\n      </pre>\n    </div>\n  </div>\n</section>\n","<div class=\"accordion\" id=\"accordionExample\">\n  <div class=\"card\">\n    <button\n      class=\"card-header collapsed card-link card-info\"\n      data-toggle=\"collapse\"\n      [attr.data-target]=\"'#' + identifier\"\n    >\n      <span class=\"collpase-title\">{{ title }}</span>\n      <br />\n      <span class=\"collpase-subtitle\">{{ subtitle }}</span>\n    </button>\n    <div [id]=\"identifier\" class=\"collapse\" data-parent=\"#accordion\">\n      <div class=\"card-body\">\n        <ng-container *ngFor=\"let collapse of collapseInfoArr; index as i\">\n          <small>{{ collapse.header }}</small>\n          <h4 class=\"mb-0\">{{ collapse.body }}</h4>\n          <small>{{ collapse.footer }}</small>\n          <hr *ngIf=\"i !== getLastCollapseInfoArr\" />\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { CollapseInfo } from '../../../core/models/collapse.models';\n\n@Component({\n  selector: 'o-collapse-info',\n  templateUrl: './o-collapse-info.component.html',\n  styleUrls: ['./o-collapse-info.component.scss']\n})\nexport class OCollapseInfoComponent {\n  @Input() public title!: string;\n  @Input() public subtitle!: string;\n  @Input() public identifier!: string;\n  @Input() public collapseInfoArr: CollapseInfo[] = [];\n\n  get getLastCollapseInfoArr(): number {\n    return this.collapseInfoArr.indexOf(this.collapseInfoArr[this.collapseInfoArr.length - 1]);\n  }\n}\n","import { Component } from '@angular/core';\nimport { COLLAPSE_INFO_EXAMPLE_HTML, COLLAPSE_INFO_EXAMPLE_TS } from 'src/app/constants/collapse.constants';\n\n@Component({\n  selector: 'app-collapse-info-examples',\n  templateUrl: './collapse-info-examples.component.html',\n  styleUrls: ['./collapse-info-examples.component.scss']\n})\nexport class CollapseInfoExamplesComponent {\n  public array = [\n    { header: 'BOLETA N° 2564-59879543', body: 'Solicitud de informes varios', footer: '$ 450' },\n    { header: 'BOLETA N° 2564-59879543', body: 'Solicitud de informes varios', footer: '$ 450' }\n  ];\n  public exampleHTML = COLLAPSE_INFO_EXAMPLE_HTML;\n  public exampleTs = COLLAPSE_INFO_EXAMPLE_TS;\n}\n","<section class=\"section-example\">\n  <app-viewer title=\"Selección única\" [isNavCode]=\"true\">\n    <o-collapse-info\n      component\n      title=\"Total:\"\n      subtitle=\"$ 450\"\n      [collapseInfoArr]=\"array\"\n      identifier=\"collapseOne\"\n    ></o-collapse-info>\n    <pre appClipboard component-html class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism language=\"html\">\n        {{ exampleHTML }}\n      </code>\n    </pre>\n    <pre appClipboard component-ts class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism language=\"javascript\">\n        {{ exampleTs }}\n      </code>\n    </pre>\n  </app-viewer>\n</section>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CollapseInfoApiComponent } from './pages/collapse-info-api/collapse-info-api.component';\nimport { CollapseInfoExamplesComponent } from './pages/collapse-info-examples/collapse-info-examples.component';\nimport { CollapseInfoOverviewComponent } from './pages/collapse-info-overview/collapse-info-overview.component';\n\nconst routes: Routes = [\n  { path: 'overview', component: CollapseInfoOverviewComponent },\n  { path: 'api', component: CollapseInfoApiComponent },\n  { path: 'examples', component: CollapseInfoExamplesComponent },\n  { path: '**', redirectTo: 'overview', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CollapseInfoRoutingModule {}\n","import { Component } from '@angular/core';\nimport { COLLAPSE_BAD_PRACTICES, COLLAPSE_BEST_PRACTIVES } from 'src/app/constants/collapse.constants';\n\n@Component({\n  selector: 'app-collapse-info-overview',\n  templateUrl: './collapse-info-overview.component.html',\n  styleUrls: ['./collapse-info-overview.component.scss']\n})\nexport class CollapseInfoOverviewComponent {\n  public bestPractices = COLLAPSE_BEST_PRACTIVES;\n  public badPractices = COLLAPSE_BAD_PRACTICES;\n}\n","<section class=\"section-overview\">\n  <p class=\"lead\">\n    Los colapsables permiten a los usuarios mostrar y ocultar secciones de contenido relacionado en una página.\n  </p>\n\n  <div class=\"section-collapse\">\n    <h2>Colapsable - Totalizador</h2>\n\n    <p>\n      Se usa exclusivamente para transacciones. Sirve para poder dar el detalle especificando cada parte del pago que\n      realiza la persona ciudadana, dando transparencia y claridad.\n    </p>\n  </div>\n\n  <div class=\"section-design\">\n    <h2>Diseño y estructura (Contexto de uso)</h2>\n\n    <h3>Colapsable - Totalizador</h3>\n\n    <p>\n      Solamente se pueden visualizar este tipo de colapsables de a uno por vez o por pantalla, no se pueden agrupar\n      varios de estos tipos. Se ubican a un costado de la pantalla.\n    </p>\n\n    <img\n      class=\"card-img-top\"\n      src=\"https://gcba.github.io/estandares/componentes/colapsable/collapse_totalizador.png\"\n      alt=\"imagen sobre collapsable info\"\n    />\n  </div>\n\n  <div class=\"section-usability\">\n    <h2>Usabilidad</h2>\n\n    <app-best-practices [practices]=\"bestPractices\"></app-best-practices>\n\n    <app-bad-practices [practices]=\"badPractices\"></app-bad-practices>\n  </div>\n</section>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CollapseInfoRoutingModule } from './collapse-info-routing.module';\nimport { OCollapseModule, ONavModule, OTableComponent } from 'projects/ngx-obelisco/src/public-api';\n\nimport { CollapseInfoComponent } from './collapse-info.component';\nimport { CollapseInfoOverviewComponent } from './pages/collapse-info-overview/collapse-info-overview.component';\nimport { CollapseInfoApiComponent } from './pages/collapse-info-api/collapse-info-api.component';\nimport { CollapseInfoExamplesComponent } from './pages/collapse-info-examples/collapse-info-examples.component';\nimport { BestPracticesComponent } from 'src/app/components/best-practices/best-practices.component';\nimport { BadPracticesComponent } from 'src/app/components/bad-practices/bad-practices.component';\nimport { ViewerComponent } from 'src/app/components/viewer/viewer.component';\nimport { ClipboardDirective } from 'src/app/shared/directives/copy/clipboard.directive';\nimport { PrismDirective } from 'src/app/shared/directives/prism/prism.directive';\n\n@NgModule({\n  declarations: [\n    CollapseInfoComponent,\n    CollapseInfoOverviewComponent,\n    CollapseInfoApiComponent,\n    CollapseInfoExamplesComponent\n  ],\n  imports: [\n    CommonModule,\n    CollapseInfoRoutingModule,\n    ONavModule,\n    BestPracticesComponent,\n    BadPracticesComponent,\n    OCollapseModule,\n    OTableComponent,\n    ViewerComponent,\n    ClipboardDirective,\n    PrismDirective\n  ]\n})\nexport class CollapseInfoModule {}\n","import { AfterViewInit, Directive, ElementRef, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appClipboard]',\n  standalone: true\n})\nexport class ClipboardDirective implements AfterViewInit {\n  constructor(private readonly host: ElementRef, private readonly renderer: Renderer2) {}\n\n  ngAfterViewInit(): void {\n    if (navigator.clipboard) {\n      const button = this.host.nativeElement.closest('pre').querySelector('button');\n      this.renderer.listen(button, 'click', this.clipboard);\n    }\n  }\n\n  public clipboard(event: PointerEvent): void {\n    const button = event.target as HTMLButtonElement;\n    const pre = button?.parentElement;\n    const code = pre?.querySelector('code');\n    const text = code?.innerText;\n    navigator.clipboard.writeText(text!);\n    button.innerText = 'Codigo copiado!';\n\n    setTimeout(() => {\n      button.innerText = 'Copiar';\n    }, 1000);\n  }\n}\n"],"x_google_ignoreList":[]}