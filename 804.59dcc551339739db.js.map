{"version":3,"file":"804.59dcc551339739db.js","mappings":"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","names":["i0","OTableComponent","constructor","renderer","this","EventEmitter","ngOnInit","componentValidations","ngAfterViewInit","checkbox","map","e","inputCheckArr","push","nativeElement","isValidateComponent","displayedColumns","length","dataSource","Error","key","value","trim","charAt","toUpperCase","slice","toLowerCase","match","allSelected","$event","checked","setProperty","DataSelectedArr","dataSelected","emit","selectedRow","index","indexOf","filter","_","i","selectors","CommonModule","i1","ViewerComponent","linkCode","isOpenCode","OFooterComponent","getIsPhones","phonesList","getIsNetworks","networksList","getIsLinks","linksList","DefaultImageDirective","FooterApiComponent","FOOTER_DATA_SOURCE","COLUMNS","FOOTER_INTERFACE_PHONE","FOOTER_INTERFACE_NETWORK","FOOTER_INTERFACE_LINK","routes","path","component","FooterOverviewComponent","FooterExamplesComponent","PHONES_LIST","NETWORKS_LIST","LINKS_LIST","FOOTER_EXAMPLE_LINKS_HTML","FOOTER_EXAMPLE_LINKS_TS","FOOTER_EXAMPLE_NETWORKS_HTML","FOOTER_EXAMPLE_NETWORKS_TS","FOOTER_EXAMPLE_PHONES_HTML","FOOTER_EXAMPLE_PHONES_TS","FOOTER_EXAMPLE_ALL_HTML","FOOTER_EXAMPLE_ALL_TS","pathMatch","redirectTo","FooterRoutingModule","RouterModule","FooterModule","ONavModule","ClipboardDirective","host","navigator","clipboard","button","closest","querySelector","listen","event","target","pre","g","parentElement","code","Z","writeText","T","innerText","setTimeout"],"sourceRoot":"webpack:///","sources":["./projects/ngx-obelisco/table/o-table.component.html","./projects/ngx-obelisco/table/o-table.component.ts","./src/app/components/viewer/viewer.component.html","./src/app/components/viewer/viewer.component.ts","./projects/ngx-obelisco/footer/o-footer.component.html","./projects/ngx-obelisco/footer/o-footer.component.ts","./src/app/modules/section-components/footer/pages/footer-api/footer-api.component.ts","./src/app/modules/section-components/footer/pages/footer-api/footer-api.component.html","./src/app/modules/section-components/footer/footer-routing.module.ts","./src/app/modules/section-components/footer/pages/footer-overview/footer-overview.component.ts","./src/app/modules/section-components/footer/pages/footer-overview/footer-overview.component.html","./src/app/modules/section-components/footer/pages/footer-examples/footer-examples.component.ts","./src/app/modules/section-components/footer/pages/footer-examples/footer-examples.component.html","./src/app/modules/section-components/footer/footer.module.ts","./src/app/shared/directives/copy/clipboard.directive.ts"],"sourcesContent":["<table\n  *ngIf=\"isValidateComponent\"\n  class=\"table\"\n  [ngClass]=\"{ 'table-bordered': isBordered, 'table-striped': isStriped, 'table-hover': isHover }\"\n>\n  <thead>\n    <tr>\n      <th scope=\"col\" *ngIf=\"isSelectable\">\n        <input type=\"checkbox\" aria-label=\"checkbox\" (change)=\"allSelected($event.target)\" />\n      </th>\n      <th scope=\"col\" *ngFor=\"let column of displayedColumns\">{{ column.value }}</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let data of dataSource\">\n      <td *ngIf=\"isSelectable\">\n        <input #checkbox type=\"checkbox\" aria-label=\"checkbox\" (change)=\"selectedRow($event.target)\" />\n      </td>\n      <td *ngFor=\"let column of displayedColumns\" [innerHTML]=\"data[column.key]\"></td>\n    </tr>\n  </tbody>\n</table>\n","import { CommonModule } from '@angular/common';\nimport {\n  OnInit,\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  ViewChildren,\n  Renderer2\n} from '@angular/core';\nimport { Column } from 'ngx-obelisco/core/models';\n\n@Component({\n  selector: 'o-table',\n  templateUrl: './o-table.component.html',\n  styleUrls: ['./o-table.component.scss'],\n  standalone: true,\n  imports: [CommonModule]\n})\nexport class OTableComponent implements OnInit, AfterViewInit {\n  public isValidateComponent: boolean = false;\n\n  @Input() public displayedColumns: Column[] = [];\n  @Input() public dataSource: any[] = [];\n  @Input() public isBordered: boolean = false;\n  @Input() public isStriped: boolean = false;\n  @Input() public isHover: boolean = false;\n  @Input() public isSelectable: boolean = false;\n  @Output() public dataSelected = new EventEmitter<any>();\n\n  private inputCheckArr: ElementRef[] = [];\n  private DataSelectedArr: any[] = [];\n\n  @ViewChildren('checkbox') public checkbox!: QueryList<ElementRef>;\n\n  constructor(private readonly renderer: Renderer2) {}\n\n  public ngOnInit(): void {\n    this.componentValidations();\n  }\n\n  public ngAfterViewInit(): void {\n    this.checkbox.map((e) => {\n      this.inputCheckArr.push(e.nativeElement);\n    });\n  }\n\n  /**\n   * @description\n   * This method is used to validate the component\n   * For this component to work, the following conditions must be met:\n   * 1. The displayedColumns and displayedColumns property must be filled\n   * 2. The displayedColumns property must be has \"values\" and \"keys\" not null\n   * 3. The displayedColumns is trimmed for spaces\n   * 4. The displayedColumns is converted to capitalization\n   * 5. The displayedColumns is validated if \"value\" contains numbers or special characters and \"key\" contains numbers, special characters or accents\n   * @returns void\n   */\n  private componentValidations(): void {\n    this.isValidateComponent = this.displayedColumns.length > 0 && this.dataSource.length > 0;\n\n    if (!this.isValidateComponent) {\n      throw new Error('The displayedColumns and dataSource must not be empty');\n    }\n\n    this.displayedColumns.map((e) => {\n      if (e.key === '' || e.value === '') {\n        this.isValidateComponent = false;\n        throw new Error('The displayedColumns must not have null values');\n      }\n    });\n\n    this.displayedColumns.map((e) => (e.value = e.value.trim()));\n\n    this.displayedColumns = this.displayedColumns.map((e) => {\n      e.value = e.value.charAt(0).toUpperCase() + e.value.slice(1).toLowerCase();\n      return e;\n    });\n\n    this.displayedColumns.map((e) => {\n      if (e.value.match(/^[a-zA-ZáéíóúÁÉÍÓÚñÑ ]*$/) && e.key.match(/^[a-zA-Z ]*$/)) {\n        this.isValidateComponent = true;\n        return e;\n      } else {\n        this.isValidateComponent = false;\n        throw new Error(\n          'The displayedColumns value must not contain numbers or symbols and the key must not contain numbers, symbols or accents'\n        );\n      }\n    });\n  }\n\n  public allSelected($event: any): void {\n    if (!$event.checked) {\n      this.checkbox.map((e) => this.renderer.setProperty(e.nativeElement, 'checked', false));\n      this.DataSelectedArr = [];\n    } else {\n      this.checkbox.map((e) => this.renderer.setProperty(e.nativeElement, 'checked', true));\n      this.DataSelectedArr = this.dataSource;\n    }\n\n    this.dataSelected.emit(this.DataSelectedArr);\n  }\n\n  public selectedRow($event: any): void {\n    const index = this.inputCheckArr.indexOf($event);\n\n    if ($event.checked) {\n      this.DataSelectedArr.push(this.dataSource[index]);\n    } else {\n      this.DataSelectedArr = this.DataSelectedArr.filter((_, i) => i !== index);\n    }\n\n    this.dataSelected.emit(this.DataSelectedArr);\n  }\n}\n","<div class=\"example-wrapper\">\n  <div class=\"example-viewer\">\n    <p>{{ title }}</p>\n    <nav>\n      <ul class=\"nav flex-row nav-pills\">\n        <li class=\"nav-item d-flex\">\n          <a class=\"nav-link\" [class.active]=\"isOpenCode\" (click)=\"isOpenCode = !isOpenCode\">\n            <span>{{ linkCode }}</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n  </div>\n  <div class=\"wrapper\">\n    <nav *ngIf=\"isOpenCode && isNavCode\">\n      <ul class=\"nav flex-row nav-pills\">\n        <li class=\"nav-item d-flex\">\n          <a class=\"nav-link\" [class.active]=\"isWindowHTML\" (click)=\"isWindowHTML = true\">\n            <span>HTML</span>\n          </a>\n          <a class=\"nav-link\" [class.active]=\"!isWindowHTML\" (click)=\"isWindowHTML = false\">\n            <span>TS</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n    <ng-container *ngIf=\"!isOpenCode; else codeTemplate\">\n      <ng-content select=\"[component]\"></ng-content>\n    </ng-container>\n\n    <ng-template #codeTemplate>\n      <ng-container *ngIf=\"isWindowHTML; else windowTs\">\n        <ng-content select=\"[component-html]\"></ng-content>\n      </ng-container>\n    </ng-template>\n\n    <ng-template #windowTs>\n      <ng-content select=\"[component-ts]\"></ng-content>\n    </ng-template>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-viewer',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './viewer.component.html',\n  styleUrls: ['./viewer.component.scss']\n})\nexport class ViewerComponent {\n  @Input() public title!: string;\n  @Input() public isNavCode: boolean = false;\n\n  public isOpenCode: boolean = false;\n  public isWindowHTML: boolean = true;\n\n  get linkCode(): string {\n    return this.isOpenCode ? 'Esconder codigo' : 'Mostrar codigo';\n  }\n}\n","<footer class=\"main-footer\">\n  <div class=\"container\" *ngIf=\"getIsPhones || getIsNetworks\">\n    <section *ngIf=\"getIsPhones\">\n      <h4>Teléfonos útiles</h4>\n      <ul class=\"list-inline\">\n        <li class=\"list-inline-item phone-items\" *ngFor=\"let phone of phonesList\">\n          <a [href]=\"phone.number\">{{ phone.title }}</a>\n        </li>\n      </ul>\n      <a href=\"https://www.buenosaires.gob.ar/laciudad/telefonosutiles\">Ver todos los teléfonos</a>\n    </section>\n    <section *ngIf=\"getIsNetworks\">\n      <h4>Redes de la ciudad</h4>\n      <ul class=\"list-inline\">\n        <li class=\"list-inline-item redes-items\" *ngFor=\"let network of networksList\">\n          <a [href]=\"network.url\" target=\"_blank\"><i class=\"bx {{ network.icon }}\"></i>{{ network.title }}</a>\n        </li>\n      </ul>\n    </section>\n  </div>\n  <hr class=\"divider\" *ngIf=\"getIsPhones || getIsNetworks\" />\n  <div class=\"container\">\n    <section class=\"footer-legal-section\">\n      <div class=\"row align-items-center\">\n        <div class=\"col-12 col-md-5 col-xl-4 mb-4 mb-md-0 footer-content-img\">\n          <img\n            oDefaultImage\n            class=\"d-lg-none\"\n            src=\"https://raw.githubusercontent.com/gcba/Obelisco/8e3c51245a98c0c2c5fed1e43e20d53fa135e98d/static/footer/ciudad-ba-sm.svg\"\n            alt=\"Ciudad de Buenos Aires\"\n            height=\"48\"\n          />\n          <img\n            oDefaultImage\n            class=\"d-none d-lg-inline\"\n            src=\"https://raw.githubusercontent.com/gcba/Obelisco/8e3c51245a98c0c2c5fed1e43e20d53fa135e98d/static/footer/ciudad-ba.svg\"\n            alt=\"Ciudad de Buenos Aires\"\n            height=\"40\"\n          />\n          <img\n            oDefaultImage\n            class=\"img-vamos-ba\"\n            src=\"https://raw.githubusercontent.com/gcba/Obelisco/8e3c51245a98c0c2c5fed1e43e20d53fa135e98d/static/footer/vamos-ba.svg\"\n            alt=\"Vamos Buenos Aires\"\n          />\n        </div>\n        <div class=\"col-12 col-md-7 col-xl-8\" *ngIf=\"getIsLinks\">\n          <ul class=\"list-inline\">\n            <li class=\"list-inline-item\" *ngFor=\"let link of linksList\">\n              <a [href]=\"link.url\">{{ link.title }}</a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </section>\n    <section>\n      <div class=\"footer-license-text\">\n        Los contenidos de buenosaires.gob.ar están licenciados bajo\n        <br class=\"d-none d-sm-inline\" />\n        Creative Commons Reconocimiento 2.5 Argentina License.\n      </div>\n    </section>\n  </div>\n</footer>\n","import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { Link, Network, Phone } from 'ngx-obelisco/core/models';\nimport { DefaultImageDirective } from 'ngx-obelisco/directives';\n\n@Component({\n  selector: 'o-footer',\n  standalone: true,\n  imports: [CommonModule, RouterModule, DefaultImageDirective],\n  templateUrl: './o-footer.component.html',\n  styleUrls: ['./o-footer.component.scss']\n})\nexport class OFooterComponent {\n  @Input() public phonesList: Phone[] = [];\n  @Input() public networksList: Network[] = [];\n  @Input() public linksList: Link[] = [];\n\n  get getIsPhones(): boolean {\n    return this.phonesList.length > 0;\n  }\n\n  get getIsNetworks(): boolean {\n    return this.networksList.length > 0;\n  }\n\n  get getIsLinks(): boolean {\n    return this.linksList.length > 0;\n  }\n}\n","import { Component } from '@angular/core';\nimport {\n  FOOTER_DATA_SOURCE,\n  FOOTER_INTERFACE_LINK,\n  FOOTER_INTERFACE_NETWORK,\n  FOOTER_INTERFACE_PHONE\n} from 'src/app/constants/footer.constants';\nimport { COLUMNS } from 'src/app/constants/components.constants';\n\n@Component({\n  selector: 'app-footer-api',\n  templateUrl: './footer-api.component.html',\n  styleUrls: ['./footer-api.component.scss']\n})\nexport class FooterApiComponent {\n  public dataSource = FOOTER_DATA_SOURCE;\n  public columns = COLUMNS;\n  public exampleIterfacePhone = FOOTER_INTERFACE_PHONE;\n  public exampleIterfaceNetwork = FOOTER_INTERFACE_NETWORK;\n  public exampleIterfaceLink = FOOTER_INTERFACE_LINK;\n}\n","<section class=\"section-api\">\n  <div class=\"section-title\">\n    <h2>Referencia de API para el componente Footer de Obelisco</h2>\n    <pre class=\"code import\">\n      <code appPrism language=\"javascript\" code=\"import { OFooterComponent } from 'ngx-obelisco';\"></code>\n    </pre>\n  </div>\n\n  <h3>Etiqueta</h3>\n  <hr />\n\n  <div class=\"section-selector\">\n    <h4>OFooter</h4>\n    <p>Selector: <strong>o-footer</strong></p>\n\n    <div class=\"section-properties\">\n      <h5>Propiedades</h5>\n\n      <o-table [displayedColumns]=\"columns\" [dataSource]=\"dataSource\" [isStriped]=\"true\" [isBordered]=\"true\"></o-table>\n    </div>\n  </div>\n\n  <h3>Tipos de datos</h3>\n  <hr />\n\n  <div class=\"section-type\">\n    <h4>Phone</h4>\n    <p>Permite establecer los valores de la propiedad <strong>phonesList</strong>.</p>\n\n    <div class=\"section-interface\">\n      <pre class=\"code import\">\n        <code appPrism language=\"javascript\">{{ exampleIterfacePhone }}</code>\n      </pre>\n    </div>\n  </div>\n\n  <br />\n\n  <div class=\"section-type\">\n    <h4>Network</h4>\n    <p>Permite establecer los valores de la propiedad <strong>networksList</strong>.</p>\n\n    <div class=\"section-interface\">\n      <pre class=\"code import\">\n        <code appPrism language=\"javascript\">{{ exampleIterfaceNetwork }}</code>\n      </pre>\n    </div>\n  </div>\n\n  <br />\n\n  <div class=\"section-type\">\n    <h4>Link</h4>\n    <p>Permite establecer los valores de la propiedad <strong>linksList</strong>.</p>\n\n    <div class=\"section-interface\">\n      <pre class=\"code import\">\n        <code appPrism language=\"javascript\">{{ exampleIterfaceLink }}</code>\n      </pre>\n    </div>\n  </div>\n</section>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FooterApiComponent } from './pages/footer-api/footer-api.component';\nimport { FooterExamplesComponent } from './pages/footer-examples/footer-examples.component';\nimport { FooterOverviewComponent } from './pages/footer-overview/footer-overview.component';\n\nconst routes: Routes = [\n  { path: 'overview', component: FooterOverviewComponent },\n  { path: 'api', component: FooterApiComponent },\n  { path: 'examples', component: FooterExamplesComponent },\n  { path: '**', pathMatch: 'full', redirectTo: 'overview' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FooterRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer-overview',\n  templateUrl: './footer-overview.component.html',\n  styleUrls: ['./footer-overview.component.scss']\n})\nexport class FooterOverviewComponent {}\n","<section class=\"section-overview\">\n  <p class=\"lead\">\n    Es un componente de navegación adicional. Puede contener enlaces, botones, información de la empresa, derechos de\n    autor, formularios y otros elementos.\n  </p>\n\n  <h2>Tipos de Footer</h2>\n  <p>\n    El footer se usa para mostrar información general a la que un usuario podría querer acceder desde cualquier página\n    dentro del sitio.\n  </p>\n\n  <h3>Footer básico</h3>\n\n  <p>Un ejemplo básico del Footer simple con logotipo y sección de derechos de autor.</p>\n\n  <h3>Footer con enlaces</h3>\n\n  <p>\n    Utilice este componente para mostrar el logotipo, derechos de autor y algunos enlaces a sitios web en una segunda\n    columna.\n  </p>\n\n  <h3>Footer con redes sociales</h3>\n\n  <p>\n    Si lo desea, puede usar este componente para mostrar la sección de redes sociales del sitio que abarque todo el\n    ancho de una fila.\n  </p>\n\n  <h3>Footer con telefonos</h3>\n\n  <p>\n    Si lo desea, puede usar este componente para mostrar la sección de telefonos del sitio que abarque todo el ancho de\n    una fila.\n  </p>\n\n  <h3>Footer completo</h3>\n\n  <p>\n    El footer se puede personalizar fácilmente para mostrar una sección de redes sociales, telefonos, seguido de\n    información de derechos de autor y enlaces a sitios web .\n  </p>\n\n  <div class=\"section-design\">\n    <h2>Diseño y estructura (Contexto de uso)</h2>\n\n    <h3>En cuerpo de página</h3>\n\n    <p>\n      El componente de footer se utiliza como pie de página global para todas las vistas. Contiene datos de derechos de\n      autor, redes y teléfonos y enlaces a sitios web.\n    </p>\n  </div>\n</section>\n","import { Component } from '@angular/core';\nimport {\n  FOOTER_EXAMPLE_ALL_HTML,\n  FOOTER_EXAMPLE_ALL_TS,\n  FOOTER_EXAMPLE_LINKS_HTML,\n  FOOTER_EXAMPLE_LINKS_TS,\n  FOOTER_EXAMPLE_NETWORKS_HTML,\n  FOOTER_EXAMPLE_NETWORKS_TS,\n  FOOTER_EXAMPLE_PHONES_HTML,\n  FOOTER_EXAMPLE_PHONES_TS,\n  LINKS_LIST,\n  NETWORKS_LIST,\n  PHONES_LIST\n} from 'src/app/constants/footer.constants';\n\n@Component({\n  selector: 'app-footer-examples',\n  templateUrl: './footer-examples.component.html',\n  styleUrls: ['./footer-examples.component.scss']\n})\nexport class FooterExamplesComponent {\n  public phonesList = PHONES_LIST;\n  public networksList = NETWORKS_LIST;\n  public linksList = LINKS_LIST;\n  public exampleLinksHTML = FOOTER_EXAMPLE_LINKS_HTML;\n  public exampleLinksTS = FOOTER_EXAMPLE_LINKS_TS;\n  public exampleNetworksHTML = FOOTER_EXAMPLE_NETWORKS_HTML;\n  public exampleNetworksTS = FOOTER_EXAMPLE_NETWORKS_TS;\n  public examplePhonesHTML = FOOTER_EXAMPLE_PHONES_HTML;\n  public examplePhonesTS = FOOTER_EXAMPLE_PHONES_TS;\n  public exampleAllHTML = FOOTER_EXAMPLE_ALL_HTML;\n  public exampleAllTS = FOOTER_EXAMPLE_ALL_TS;\n}\n","<section class=\"section-example\">\n  <app-viewer title=\"Footer básico\">\n    <o-footer component></o-footer>\n    <pre appClipboard component-html class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism language=\"html\" code=\"<o-footer></o-footer>\"></code>\n    </pre>\n  </app-viewer>\n\n  <app-viewer title=\"Footer con enlaces\" [isNavCode]=\"true\">\n    <o-footer component [linksList]=\"linksList\"></o-footer>\n    <pre appClipboard component-html class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism language=\"html\">{{ exampleLinksHTML }}</code>\n    </pre>\n    <pre appClipboard component-ts class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism language=\"javascript\">{{ exampleLinksTS }}</code>\n    </pre>\n  </app-viewer>\n\n  <app-viewer title=\"Footer con redes sociales\" [isNavCode]=\"true\">\n    <o-footer component [networksList]=\"networksList\"></o-footer>\n    <pre appClipboard component-html class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism language=\"html\">{{ exampleNetworksHTML }}</code>\n    </pre>\n    <pre appClipboard component-ts class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism language=\"javascript\">{{ exampleNetworksTS }}</code>\n    </pre>\n  </app-viewer>\n\n  <app-viewer title=\"Footer con telefonos\" [isNavCode]=\"true\">\n    <o-footer component [phonesList]=\"phonesList\"></o-footer>\n    <pre appClipboard component-html class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism language=\"html\">{{ examplePhonesHTML }}</code>\n    </pre>\n    <pre appClipboard component-ts class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism language=\"javascript\">{{ examplePhonesTS }}</code>\n    </pre>\n  </app-viewer>\n\n  <app-viewer title=\"Footer completo\" [isNavCode]=\"true\">\n    <o-footer component [linksList]=\"linksList\" [networksList]=\"networksList\" [phonesList]=\"phonesList\"></o-footer>\n    <pre appClipboard component-html class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism language=\"html\">{{ exampleAllHTML }}</code>\n    </pre>\n    <pre appClipboard component-ts class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism language=\"javascript\">{{ exampleAllTS }}</code>\n    </pre>\n  </app-viewer>\n</section>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OFooterComponent } from 'projects/ngx-obelisco/footer';\nimport { ONavModule } from 'projects/ngx-obelisco/nav';\nimport { OTableComponent } from 'projects/ngx-obelisco/table';\nimport { ViewerComponent } from 'src/app/components/viewer/viewer.component';\nimport { ClipboardDirective } from 'src/app/shared/directives/copy/clipboard.directive';\nimport { PrismDirective } from 'src/app/shared/directives/prism/prism.directive';\n\nimport { FooterRoutingModule } from './footer-routing.module';\nimport { FooterComponent } from './footer.component';\nimport { FooterApiComponent } from './pages/footer-api/footer-api.component';\nimport { FooterExamplesComponent } from './pages/footer-examples/footer-examples.component';\nimport { FooterOverviewComponent } from './pages/footer-overview/footer-overview.component';\n\n@NgModule({\n  declarations: [FooterComponent, FooterApiComponent, FooterExamplesComponent, FooterOverviewComponent],\n  imports: [\n    CommonModule,\n    FooterRoutingModule,\n    ONavModule,\n    OTableComponent,\n    OFooterComponent,\n    ViewerComponent,\n    ClipboardDirective,\n    PrismDirective\n  ]\n})\nexport class FooterModule {}\n","import { AfterViewInit, Directive, ElementRef, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appClipboard]',\n  standalone: true\n})\nexport class ClipboardDirective implements AfterViewInit {\n  constructor(private readonly host: ElementRef, private readonly renderer: Renderer2) {}\n\n  ngAfterViewInit(): void {\n    if (navigator.clipboard) {\n      const button = this.host.nativeElement.closest('pre').querySelector('button');\n      this.renderer.listen(button, 'click', this.clipboard);\n    }\n  }\n\n  public clipboard(event: PointerEvent): void {\n    const button = event.target as HTMLButtonElement;\n    const pre = button?.parentElement;\n    const code = pre?.querySelector('code');\n    const text = code?.innerText;\n    navigator.clipboard.writeText(text!);\n    button.innerText = 'Codigo copiado!';\n\n    setTimeout(() => {\n      button.innerText = 'Copiar';\n    }, 1000);\n  }\n}\n"],"x_google_ignoreList":[]}