{"version":3,"file":"929.cb46d5f537fe4924.js","mappings":"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","names":["i0","OTableComponent","constructor","renderer","this","EventEmitter","ngOnInit","componentValidations","ngAfterViewInit","checkbox","map","e","inputCheckArr","push","nativeElement","isValidateComponent","displayedColumns","length","dataSource","Error","key","value","trim","charAt","toUpperCase","slice","toLowerCase","match","allSelected","$event","checked","setProperty","DataSelectedArr","dataSelected","emit","selectedRow","index","indexOf","filter","_","i","selectors","CommonModule","i1","BadPracticesComponent","BestPracticesComponent","ViewerComponent","linkCode","isOpenCode","PanelLargeFeaturedApiComponent","PANEL_LARGE_FEATURED_DATA_SOURCE","COLUMNS","OLargeFeaturedPanelComponent","routes","path","component","PanelLargeFeaturedExamplesComponent","PANEL_LARGE_IMAGE_HORIZONTAL_EXAMPLE_HTML","PANEL_LARGE_IMAGE_HORIZONTAL_DOWNLOAD_BUTTON_EXAMPLE_HTML","PANEL_LARGE_IMAGE_HORIZONTAL_DOWNLOAD_LINK_EXAMPLE_HTML","PANEL_LARGE_VIDEO_HORIZONTAL_EXAMPLE_HTML","PANEL_LARGE_IMAGE_VERTICAL_EXAMPLE_HTML","PANEL_LARGE_VIDEO_VERTICAL_EXAMPLE_HTML","redirectTo","pathMatch","PanelLargeFeaturedRoutingModule","RouterModule","PanelLargeFeaturedModule","ONavModule","OPanelModule","ClipboardDirective","host","navigator","clipboard","button","closest","querySelector","listen","event","target","pre","p","parentElement","code","l","writeText","innerText","setTimeout"],"sourceRoot":"webpack:///","sources":["./projects/ngx-obelisco/src/lib/components/o-table/o-table.component.html","./projects/ngx-obelisco/src/lib/components/o-table/o-table.component.ts","./src/app/components/bad-practices/bad-practices.component.html","./src/app/components/bad-practices/bad-practices.component.ts","./src/app/components/best-practices/best-practices.component.html","./src/app/components/best-practices/best-practices.component.ts","./src/app/components/viewer/viewer.component.html","./src/app/components/viewer/viewer.component.ts","./src/app/modules/section-components/panel/panel-large-featured/pages/panel-large-featured-api/panel-large-featured-api.component.ts","./src/app/modules/section-components/panel/panel-large-featured/pages/panel-large-featured-api/panel-large-featured-api.component.html","./projects/ngx-obelisco/src/lib/components/o-panel/o-large-featured-panel/o-large-featured-panel.component.html","./projects/ngx-obelisco/src/lib/components/o-panel/o-large-featured-panel/o-large-featured-panel.component.ts","./src/app/modules/section-components/panel/panel-large-featured/panel-large-featured-routing.module.ts","./src/app/modules/section-components/panel/panel-large-featured/pages/panel-large-featured-examples/panel-large-featured-examples.component.ts","./src/app/modules/section-components/panel/panel-large-featured/pages/panel-large-featured-examples/panel-large-featured-examples.component.html","./src/app/modules/section-components/panel/panel-large-featured/panel-large-featured.module.ts","./src/app/shared/directives/copy/clipboard.directive.ts"],"sourcesContent":["<table\n  *ngIf=\"isValidateComponent\"\n  class=\"table\"\n  [ngClass]=\"{ 'table-bordered': isBordered, 'table-striped': isStriped, 'table-hover': isHover }\"\n>\n  <thead>\n    <tr>\n      <th scope=\"col\" *ngIf=\"isSelectable\">\n        <input type=\"checkbox\" aria-label=\"checkbox\" (change)=\"allSelected($event.target)\" />\n      </th>\n      <th scope=\"col\" *ngFor=\"let column of displayedColumns\">{{ column.value }}</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let data of dataSource\">\n      <td *ngIf=\"isSelectable\">\n        <input #checkbox type=\"checkbox\" aria-label=\"checkbox\" (change)=\"selectedRow($event.target)\" />\n      </td>\n      <td *ngFor=\"let column of displayedColumns\" [innerHTML]=\"data[column.key]\"></td>\n    </tr>\n  </tbody>\n</table>\n","import { CommonModule } from '@angular/common';\nimport {\n  OnInit,\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  ViewChildren,\n  Renderer2\n} from '@angular/core';\nimport { Column } from '../../core/models/table.models';\n\n@Component({\n  selector: 'o-table',\n  templateUrl: './o-table.component.html',\n  styleUrls: ['./o-table.component.scss'],\n  standalone: true,\n  imports: [CommonModule]\n})\nexport class OTableComponent implements OnInit, AfterViewInit {\n  public isValidateComponent: boolean = false;\n\n  @Input() public displayedColumns: Column[] = [];\n  @Input() public dataSource: any[] = [];\n  @Input() public isBordered: boolean = false;\n  @Input() public isStriped: boolean = false;\n  @Input() public isHover: boolean = false;\n  @Input() public isSelectable: boolean = false;\n  @Output() public dataSelected = new EventEmitter<any>();\n\n  private inputCheckArr: ElementRef[] = [];\n  private DataSelectedArr: any[] = [];\n\n  @ViewChildren('checkbox') public checkbox!: QueryList<ElementRef>;\n\n  constructor(private readonly renderer: Renderer2) {}\n\n  public ngOnInit(): void {\n    this.componentValidations();\n  }\n\n  public ngAfterViewInit(): void {\n    this.checkbox.map((e) => {\n      this.inputCheckArr.push(e.nativeElement);\n    });\n  }\n\n  /**\n   * @description\n   * This method is used to validate the component\n   * For this component to work, the following conditions must be met:\n   * 1. The displayedColumns and displayedColumns property must be filled\n   * 2. The displayedColumns property must be has \"values\" and \"keys\" not null\n   * 3. The displayedColumns is trimmed for spaces\n   * 4. The displayedColumns is converted to capitalization\n   * 5. The displayedColumns is validated if \"value\" contains numbers or special characters and \"key\" contains numbers, special characters or accents\n   * @returns void\n   */\n  private componentValidations(): void {\n    this.isValidateComponent = this.displayedColumns.length > 0 && this.dataSource.length > 0;\n\n    if (!this.isValidateComponent) {\n      throw new Error('The displayedColumns and dataSource must not be empty');\n    }\n\n    this.displayedColumns.map((e) => {\n      if (e.key === '' || e.value === '') {\n        this.isValidateComponent = false;\n        throw new Error('The displayedColumns must not have null values');\n      }\n    });\n\n    this.displayedColumns.map((e) => (e.value = e.value.trim()));\n\n    this.displayedColumns = this.displayedColumns.map((e) => {\n      e.value = e.value.charAt(0).toUpperCase() + e.value.slice(1).toLowerCase();\n      return e;\n    });\n\n    this.displayedColumns.map((e) => {\n      if (e.value.match(/^[a-zA-ZáéíóúÁÉÍÓÚñÑ ]*$/) && e.key.match(/^[a-zA-Z ]*$/)) {\n        this.isValidateComponent = true;\n        return e;\n      } else {\n        this.isValidateComponent = false;\n        throw new Error(\n          'The displayedColumns value must not contain numbers or symbols and the key must not contain numbers, symbols or accents'\n        );\n      }\n    });\n  }\n\n  public allSelected($event: any): void {\n    if (!$event.checked) {\n      this.checkbox.map((e) => this.renderer.setProperty(e.nativeElement, 'checked', false));\n      this.DataSelectedArr = [];\n    } else {\n      this.checkbox.map((e) => this.renderer.setProperty(e.nativeElement, 'checked', true));\n      this.DataSelectedArr = this.dataSource;\n    }\n\n    this.dataSelected.emit(this.DataSelectedArr);\n  }\n\n  public selectedRow($event: any): void {\n    const index = this.inputCheckArr.indexOf($event);\n\n    if ($event.checked) {\n      this.DataSelectedArr.push(this.dataSource[index]);\n    } else {\n      this.DataSelectedArr = this.DataSelectedArr.filter((_, i) => i !== index);\n    }\n\n    this.dataSelected.emit(this.DataSelectedArr);\n  }\n}\n","<div class=\"section-bad-practices\">\n  <h3>Malas prácticas</h3>\n\n  <ul class=\"usability\">\n    <li class=\"dont\" *ngFor=\"let practice of practices\">\n      <p [innerHTML]=\"practice\"></p>\n    </li>\n  </ul>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-bad-practices',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './bad-practices.component.html',\n  styleUrls: ['./bad-practices.component.scss']\n})\nexport class BadPracticesComponent {\n  @Input() public practices: string[] = [];\n}\n","<div class=\"section-best-practices\">\n  <h3>Buenas prácticas</h3>\n\n  <ul class=\"usability\">\n    <li class=\"do\" *ngFor=\"let practice of practices\">\n      <p [innerHTML]=\"practice\"></p>\n    </li>\n  </ul>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-best-practices',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './best-practices.component.html',\n  styleUrls: ['./best-practices.component.scss']\n})\nexport class BestPracticesComponent {\n  @Input() public practices: string[] = [];\n}\n","<div class=\"example-wrapper\">\n  <div class=\"example-viewer\">\n    <p>{{ title }}</p>\n    <nav>\n      <ul class=\"nav flex-row nav-pills\">\n        <li class=\"nav-item d-flex\">\n          <a class=\"nav-link\" [class.active]=\"isOpenCode\" (click)=\"isOpenCode = !isOpenCode\">\n            <span>{{ linkCode }}</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n  </div>\n  <div class=\"wrapper\">\n    <nav *ngIf=\"isOpenCode && isNavCode\">\n      <ul class=\"nav flex-row nav-pills\">\n        <li class=\"nav-item d-flex\">\n          <a class=\"nav-link\" [class.active]=\"isWindowHTML\" (click)=\"isWindowHTML = true\">\n            <span>HTML</span>\n          </a>\n          <a class=\"nav-link\" [class.active]=\"!isWindowHTML\" (click)=\"isWindowHTML = false\">\n            <span>TS</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n    <ng-container *ngIf=\"!isOpenCode; else codeTemplate\">\n      <ng-content select=\"[component]\"></ng-content>\n    </ng-container>\n\n    <ng-template #codeTemplate>\n      <ng-container *ngIf=\"isWindowHTML; else windowTs\">\n        <ng-content select=\"[component-html]\"></ng-content>\n      </ng-container>\n    </ng-template>\n\n    <ng-template #windowTs>\n      <ng-content select=\"[component-ts]\"></ng-content>\n    </ng-template>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-viewer',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './viewer.component.html',\n  styleUrls: ['./viewer.component.scss']\n})\nexport class ViewerComponent {\n  @Input() public title!: string;\n  @Input() public isNavCode: boolean = false;\n\n  public isOpenCode: boolean = false;\n  public isWindowHTML: boolean = true;\n\n  get linkCode(): string {\n    return this.isOpenCode ? 'Esconder codigo' : 'Mostrar codigo';\n  }\n}\n","import { Component } from '@angular/core';\nimport { COLUMNS } from 'src/app/constants/components.constants';\nimport { PANEL_LARGE_FEATURED_DATA_SOURCE } from 'src/app/constants/panel.constants';\n\n@Component({\n  selector: 'app-panel-large-featured-api',\n  templateUrl: './panel-large-featured-api.component.html',\n  styleUrls: ['./panel-large-featured-api.component.scss']\n})\nexport class PanelLargeFeaturedApiComponent {\n  public dataSource = PANEL_LARGE_FEATURED_DATA_SOURCE;\n  public columns = COLUMNS;\n}\n","<section class=\"section-api\">\n  <div class=\"section-title\">\n    <h2>Referencia de API para el componente Panel Destacado Grande de Obelisco</h2>\n    <pre class=\"code import\">\n      <code appPrism language=\"javascript\" code=\"import { OPanelModule } from 'ngx-obelisco';\"></code>\n    </pre>\n  </div>\n\n  <h3>Etiqueta</h3>\n  <hr />\n\n  <div class=\"section-selector\">\n    <h4>OLargeFeaturedPanel</h4>\n    <p>Selector: <strong>o-large-featured-panel</strong></p>\n\n    <div class=\"section-properties\">\n      <h5>Propiedades</h5>\n\n      <o-table [displayedColumns]=\"columns\" [dataSource]=\"dataSource\" [isStriped]=\"true\" [isBordered]=\"true\"></o-table>\n    </div>\n  </div>\n</section>\n","<div class=\"card card-simple\" [ngClass]=\"[isVertical ? 'panel-vertical' : 'panel-horizontal']\">\n  <img oDefaultImage *ngIf=\"!isVideo\" [src]=\"url\" class=\"card-img\" [alt]=\"title\" />\n  <video *ngIf=\"isVideo\" class=\"card-img\" controls=\"\">\n    <source [src]=\"url\" type=\"video/mp4\" />\n    <p>Su navegador no soporta vídeos HTML5.</p>\n  </video>\n  <div class=\"card-body\">\n    <h2 class=\"card-title\">{{ title }}</h2>\n    <p class=\"card-text\">\n      {{ description }}\n    </p>\n    <ng-content></ng-content>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'o-large-featured-panel',\n  templateUrl: './o-large-featured-panel.component.html',\n  styleUrls: ['./o-large-featured-panel.component.scss']\n})\nexport class OLargeFeaturedPanelComponent {\n  @Input() public title!: string;\n  @Input() public description!: string;\n  @Input() public url!: string;\n  @Input() public isVideo: boolean = false;\n  @Input() public isVertical: boolean = false;\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PanelLargeFeaturedApiComponent } from './pages/panel-large-featured-api/panel-large-featured-api.component';\nimport { PanelLargeFeaturedExamplesComponent } from './pages/panel-large-featured-examples/panel-large-featured-examples.component';\n\nconst routes: Routes = [\n  { path: 'api', component: PanelLargeFeaturedApiComponent },\n  { path: 'examples', component: PanelLargeFeaturedExamplesComponent },\n  { path: '**', redirectTo: 'api', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PanelLargeFeaturedRoutingModule {}\n","import { Component } from '@angular/core';\nimport {\n  PANEL_LARGE_IMAGE_HORIZONTAL_DOWNLOAD_BUTTON_EXAMPLE_HTML,\n  PANEL_LARGE_IMAGE_HORIZONTAL_DOWNLOAD_LINK_EXAMPLE_HTML,\n  PANEL_LARGE_IMAGE_HORIZONTAL_EXAMPLE_HTML,\n  PANEL_LARGE_IMAGE_VERTICAL_EXAMPLE_HTML,\n  PANEL_LARGE_VIDEO_HORIZONTAL_EXAMPLE_HTML,\n  PANEL_LARGE_VIDEO_VERTICAL_EXAMPLE_HTML\n} from 'src/app/constants/panel.constants';\n\n@Component({\n  selector: 'app-panel-large-featured-examples',\n  templateUrl: './panel-large-featured-examples.component.html',\n  styleUrls: ['./panel-large-featured-examples.component.scss']\n})\nexport class PanelLargeFeaturedExamplesComponent {\n  public examplePanelLargeImageHorizontalHTML = PANEL_LARGE_IMAGE_HORIZONTAL_EXAMPLE_HTML;\n  public examplePanelLargeImageHorizontalDownloadButtonHTML = PANEL_LARGE_IMAGE_HORIZONTAL_DOWNLOAD_BUTTON_EXAMPLE_HTML;\n  public examplePanelLargeImageHorizontalDownloadLinkHTML = PANEL_LARGE_IMAGE_HORIZONTAL_DOWNLOAD_LINK_EXAMPLE_HTML;\n  public examplePanelLargeVideoHorizontalHTML = PANEL_LARGE_VIDEO_HORIZONTAL_EXAMPLE_HTML;\n  public examplePanelLargeImageVerticalHTML = PANEL_LARGE_IMAGE_VERTICAL_EXAMPLE_HTML;\n  public examplePanelLargeVideoVerticalHTML = PANEL_LARGE_VIDEO_VERTICAL_EXAMPLE_HTML;\n}\n","<section class=\"section-example\">\n  <app-viewer title=\"Horizontal con Imagen\">\n    <o-large-featured-panel\n      component\n      title=\"Encabezado\"\n      description=\"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Suscipit nostrum quo animi dignissimos omnis dicta quia placeat, nesciunt quasi hic autem iure eum necessitatibus ea expedita quas. Rem, aspernatur repudiandae.\"\n      url=\"https://raw.githubusercontent.com/gcba/Obelisco/master/static/panel/larreta.jpg\"\n    >\n      <button type=\"button\" class=\"btn btn-lg btn-primary card-link\">Botón</button>\n      <button type=\"button\" class=\"btn btn-lg btn-secondary card-link\">Botón</button>\n    </o-large-featured-panel>\n    <pre appClipboard component-html class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism language=\"html\">{{examplePanelLargeImageHorizontalHTML}}</code>\n    </pre>\n  </app-viewer>\n\n  <app-viewer title=\"Horizontal con Imagen - Botón de descarga\">\n    <o-large-featured-panel\n      component\n      title=\"Encabezado\"\n      description=\"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Suscipit nostrum quo animi dignissimos omnis dicta quia placeat, nesciunt quasi hic autem iure eum necessitatibus ea expedita quas. Rem, aspernatur repudiandae.\"\n      url=\"https://raw.githubusercontent.com/gcba/Obelisco/master/static/panel/larreta.jpg\"\n    >\n      <a class=\"btn btn-secondary btn-lg download-link\" href=\"panel/larreta.jpg\" download=\"\"> Descargar </a>\n    </o-large-featured-panel>\n    <pre appClipboard component-html class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism language=\"html\">{{examplePanelLargeImageHorizontalDownloadButtonHTML}}</code>\n    </pre>\n  </app-viewer>\n\n  <app-viewer title=\"Horizontal con Imagen - Enlace de descarga\">\n    <o-large-featured-panel\n      component\n      title=\"Encabezado\"\n      description=\"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Suscipit nostrum quo animi dignissimos omnis dicta quia placeat, nesciunt quasi hic autem iure eum necessitatibus ea expedita quas. Rem, aspernatur repudiandae.\"\n      url=\"https://raw.githubusercontent.com/gcba/Obelisco/master/static/panel/larreta.jpg\"\n    >\n      <a class=\"download\" href=\"panel/larreta.jpg\" download=\"\">Descargar</a>\n    </o-large-featured-panel>\n    <pre appClipboard component-html class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism language=\"html\">{{examplePanelLargeImageHorizontalDownloadLinkHTML}}</code>\n    </pre>\n  </app-viewer>\n\n  <app-viewer title=\"Horizontal con Video\">\n    <o-large-featured-panel\n      component\n      title=\"Encabezado\"\n      description=\"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Suscipit nostrum quo animi dignissimos omnis dicta quia placeat, nesciunt quasi hic autem iure eum necessitatibus ea expedita quas. Rem, aspernatur repudiandae.\"\n      url=\"https://raw.githubusercontent.com/gcba/Obelisco/master/static/panel/larreta.mp4\"\n      [isVideo]=\"true\"\n    >\n      <button type=\"button\" class=\"btn btn-lg btn-primary card-link\">Botón</button>\n      <button type=\"button\" class=\"btn btn-lg btn-secondary card-link\">Botón</button>\n    </o-large-featured-panel>\n    <pre appClipboard component-html class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism language=\"html\">{{examplePanelLargeVideoHorizontalHTML}}</code>\n    </pre>\n  </app-viewer>\n\n  <app-viewer title=\"Vertical con Imagen\">\n    <div component class=\"col-5\">\n      <o-large-featured-panel\n        title=\"Encabezado\"\n        description=\"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Suscipit nostrum quo animi dignissimos omnis dicta quia placeat, nesciunt quasi hic autem iure eum necessitatibus ea expedita quas. Rem, aspernatur repudiandae.\"\n        url=\"https://raw.githubusercontent.com/gcba/Obelisco/master/static/panel/larreta.jpg\"\n        [isVertical]=\"true\"\n      >\n        <button type=\"button\" class=\"btn btn-lg btn-primary card-link\">Botón</button>\n        <button type=\"button\" class=\"btn btn-lg btn-secondary card-link\">Botón</button>\n      </o-large-featured-panel>\n    </div>\n    <pre appClipboard component-html class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism language=\"html\">{{examplePanelLargeImageVerticalHTML}}</code>\n    </pre>\n  </app-viewer>\n\n  <app-viewer title=\"Vertical con Video\">\n    <div component class=\"col-5\">\n      <o-large-featured-panel\n        component\n        title=\"Encabezado\"\n        description=\"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Suscipit nostrum quo animi dignissimos omnis dicta quia placeat, nesciunt quasi hic autem iure eum necessitatibus ea expedita quas. Rem, aspernatur repudiandae.\"\n        url=\"https://raw.githubusercontent.com/gcba/Obelisco/master/static/panel/larreta.mp4\"\n        [isVertical]=\"true\"\n        [isVideo]=\"true\"\n      >\n        <button type=\"button\" class=\"btn btn-lg btn-primary card-link\">Botón</button>\n        <button type=\"button\" class=\"btn btn-lg btn-secondary card-link\">Botón</button>\n      </o-large-featured-panel>\n    </div>\n    <pre appClipboard component-html class=\"code\">\n      <button class=\"btn btn-clipboard\">Copiar</button>\n      <code appPrism language=\"html\">{{examplePanelLargeVideoVerticalHTML}}</code>\n    </pre>\n  </app-viewer>\n</section>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ONavModule, OPanelModule, OTableComponent } from 'projects/ngx-obelisco/src/public-api';\nimport { BadPracticesComponent } from 'src/app/components/bad-practices/bad-practices.component';\nimport { BestPracticesComponent } from 'src/app/components/best-practices/best-practices.component';\nimport { ViewerComponent } from 'src/app/components/viewer/viewer.component';\nimport { ClipboardDirective } from 'src/app/shared/directives/copy/clipboard.directive';\nimport { PrismDirective } from 'src/app/shared/directives/prism/prism.directive';\n\nimport { PanelLargeFeaturedApiComponent } from './pages/panel-large-featured-api/panel-large-featured-api.component';\nimport { PanelLargeFeaturedExamplesComponent } from './pages/panel-large-featured-examples/panel-large-featured-examples.component';\nimport { PanelLargeFeaturedRoutingModule } from './panel-large-featured-routing.module';\nimport { PanelLargeFeaturedComponent } from './panel-large-featured.component';\n\n@NgModule({\n  declarations: [PanelLargeFeaturedComponent, PanelLargeFeaturedApiComponent, PanelLargeFeaturedExamplesComponent],\n  imports: [\n    CommonModule,\n    PanelLargeFeaturedRoutingModule,\n    ONavModule,\n    OTableComponent,\n    OPanelModule,\n    ViewerComponent,\n    ClipboardDirective,\n    PrismDirective,\n    BestPracticesComponent,\n    BadPracticesComponent\n  ]\n})\nexport class PanelLargeFeaturedModule {}\n","import { AfterViewInit, Directive, ElementRef, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appClipboard]',\n  standalone: true\n})\nexport class ClipboardDirective implements AfterViewInit {\n  constructor(private readonly host: ElementRef, private readonly renderer: Renderer2) {}\n\n  ngAfterViewInit(): void {\n    if (navigator.clipboard) {\n      const button = this.host.nativeElement.closest('pre').querySelector('button');\n      this.renderer.listen(button, 'click', this.clipboard);\n    }\n  }\n\n  public clipboard(event: PointerEvent): void {\n    const button = event.target as HTMLButtonElement;\n    const pre = button?.parentElement;\n    const code = pre?.querySelector('code');\n    const text = code?.innerText;\n    navigator.clipboard.writeText(text!);\n    button.innerText = 'Codigo copiado!';\n\n    setTimeout(() => {\n      button.innerText = 'Copiar';\n    }, 1000);\n  }\n}\n"],"x_google_ignoreList":[]}