{"version":3,"file":"437.850adb6f05c9f14e.js","mappings":"gSAAA,MAAMA,EAAiB,WAIVC,EAAsB,CACjC,CACEC,MAAO,UACPC,MAAO,iCAET,CACED,MAAO,MACPC,MAAO,4BAET,CACED,MAAO,WACPC,MAAO,kCAIEC,EAA6BH,EAAoBI,IAAKC,GACjEC,+BACKD,GAAE,CACLH,MAAOG,EAAGH,MAAMK,QAAQR,EArBE,+BAyBjBS,EAA2BR,EAAoBI,IAAKC,GAC/DC,+BACKD,GAAE,CACLH,MAAOG,EAAGH,MAAMK,QAAQR,EA3BA,6BA+BfU,EAA6B,sVAgB7BC,EAA0B,iJAQ1BC,EAAiC,6KASjCC,EAAkC,6LAUlCC,EAAkC,6KASlCC,EAAkC,6LAUlCC,EAA8B,CACzC,CACEC,KAAM,oCACNC,YAAa,iDAEf,CACED,KAAM,mCACNC,YAAa,oDAEf,CACED,KAAM,6BACNC,YAAa,oDAEf,CACED,KAAM,qCACNC,YAAa,4EAIJC,EAA+B,CAC1C,CACEF,KAAM,uCACNC,YAAa,6FAIJE,EAA2B,+VAgB3BC,EAAwB,+MASxBC,EAA+B,wOAU/BC,EAA6B,iLAQ7BC,EAA2C,iPAU3CC,EAA4B,CACvC,CACER,KAAM,oCACNC,YAAa,iDAEf,CACED,KAAM,mCACNC,YAAa,oDAEf,CACED,KAAM,6BACNC,YAAa,oDAEf,CACED,KAAM,qCACNC,YAAa,2EAEf,CACED,KAAM,8CACNC,YAAa,iGAIJQ,EAA0B,CACrC,0FACA,oLACA,uIACA,iIACA,oKACA,qFACA,8KACA,gHAGWC,EAAyB,CAAC,8EAAD,4GC3MtC,MAAMC,EAAiB,CACrB,CACEC,KAAM,kBACNC,UCAJ,MAAM,MAAOC,EALbC,cAMSC,gBAAa7B,IACrB,+CAFY2B,EAAuB,0BAAvBA,EAAuBG,oICRpCC,qBACEA,8BACAA,iBACEA,yBACFA,iBAHkBA,oEDOPJ,CAAb,KDCIK,aAAc,IAAMC,mDAAmDC,KAAMC,GAAMA,EAAEC,uBAEvF,CACEX,KAAM,gBACNC,UGLJ,MAAM,MAAOW,EALbT,cAMSC,gBAAaxB,IACrB,+CAFYgC,EAAqB,0BAArBA,EAAqBP,kICRlCC,qBACEA,8BACAA,iBACEA,yBACFA,iBAHkBA,oEDOPM,CAAb,KHMIL,aAAc,IAAMC,sDAA+CC,KAAMC,GAAMA,EAAEG,qBAEnF,CAAEb,KAAM,KAAMc,UAAW,OAAQC,WAAY,oBAOxC,IAAMC,EAAb,MAAM,MAAOA,kDAAqB,0BAArBA,gCAHDC,cAAsBlB,GACtBkB,QAECD,CAAb,KKbaE,EAAb,MAAM,MAAOA,kDAAc,0BAAdA,gCAFDC,KAAcH,KAEbE,CAAb","names":["DROPDOWN_ROUTE","DROPDOWN_NAVIGATION","title","route","DROPDOWN_TOGGLE_NAVIGATION","map","el","Object","replace","DROPDOWN_ICON_NAVIGATION","DROPDOWN_TOGGLE_EXAMPLE_TS","DROPDOWN_TOGGLE_EXAMPLE","DROPDOWN_TOGGLE_BORDER_EXAMPLE","DROPDOWN_TOGGLE_SIZE_LG_EXAMPLE","DROPDOWN_TOGGLE_SIZE_MD_EXAMPLE","DROPDOWN_TOGGLE_SIZE_SM_EXAMPLE","DROPDOWN_TOGGLE_DATA_SOURCE","name","description","DROPDOWN_DATA_SOURCE_METHODS","DROPDOWN_ICON_EXAMPLE_TS","DROPDOWN_ICON_EXAMPLE","DROPDOWN_ICON_BORDER_EXAMPLE","DROPDOWN_ICON_ONLY_EXAMPLE","DROPDOWN_ICON_MULTIPLE_SELECTION_EXAMPLE","DROPDOWN_ICON_DATA_SOURCE","DROPDOWN_BEST_PRACTICES","DROPDOWN_BAD_PRACTICES","routes","path","component","DropdownToggleComponent","constructor","this","selectors","i0","loadChildren","Promise","then","m","DropdownToggleModule","DropdownIconComponent","DropdownIconModule","pathMatch","redirectTo","DropdownRoutingModule","RouterModule","DropdownModule","CommonModule"],"sourceRoot":"webpack:///","sources":["./src/app/constants/dropdown.constants.ts","./src/app/modules/section-components/dropdown/dropdown-routing.module.ts","./src/app/modules/section-components/dropdown/dropdown-toggle/dropdown-toggle.component.ts","./src/app/modules/section-components/dropdown/dropdown-toggle/dropdown-toggle.component.html","./src/app/modules/section-components/dropdown/dropdown-icon/dropdown-icon.component.ts","./src/app/modules/section-components/dropdown/dropdown-icon/dropdown-icon.component.html","./src/app/modules/section-components/dropdown/dropdown.module.ts"],"sourcesContent":["const DROPDOWN_ROUTE = 'dropdown';\nconst DROPDOWN_TOGGLE_ROUTE = 'dropdown/dropdown-toggle';\nconst DROPDOWN_ICON_ROUTE = 'dropdown/dropdown-icon';\n\nexport const DROPDOWN_NAVIGATION = [\n  {\n    title: 'Resumen',\n    route: '/components/dropdown/overview'\n  },\n  {\n    title: 'Api',\n    route: '/components/dropdown/api'\n  },\n  {\n    title: 'Ejemplos',\n    route: '/components/dropdown/examples'\n  }\n];\n\nexport const DROPDOWN_TOGGLE_NAVIGATION = DROPDOWN_NAVIGATION.map((el) => {\n  return {\n    ...el,\n    route: el.route.replace(DROPDOWN_ROUTE, DROPDOWN_TOGGLE_ROUTE)\n  };\n});\n\nexport const DROPDOWN_ICON_NAVIGATION = DROPDOWN_NAVIGATION.map((el) => {\n  return {\n    ...el,\n    route: el.route.replace(DROPDOWN_ROUTE, DROPDOWN_ICON_ROUTE)\n  };\n});\n\nexport const DROPDOWN_TOGGLE_EXAMPLE_TS = `\n  import { Component } from '@angular/core';\n\n  @Component({\n    selector: 'app-example',\n    template: './app-example.component.html',\n  })\n  export class ExampleComponent {\n    public options = ['Opción 1', 'Opción 2', 'Opción 3'];\n\n    public getData(event: string[]): void {\n      console.log(event);\n    }\n  }\n`;\n\nexport const DROPDOWN_TOGGLE_EXAMPLE = `\n  <o-dropdown-toggle \n    filterName=\"Filtro\" \n    [options]=\"options\" \n    (dataSelected)=\"getData($event)\"\n  >\n  </o-dropdown-toggle>`;\n\nexport const DROPDOWN_TOGGLE_BORDER_EXAMPLE = `\n  <o-dropdown-toggle \n    filterName=\"Filtro\" \n    [options]=\"options\" \n    [isBordered]=\"true\" \n    (dataSelected)=\"getData($event)\"\n    >\n  </o-dropdown-toggle>`;\n\nexport const DROPDOWN_TOGGLE_SIZE_LG_EXAMPLE = `\n  <o-dropdown-toggle \n    filterName=\"Filtro\" \n    [options]=\"options\" \n    size=\"lg\" \n    [isBordered]=\"true\" \n    (dataSelected)=\"getData($event)\"\n    >\n  </o-dropdown-toggle>`;\n\nexport const DROPDOWN_TOGGLE_SIZE_MD_EXAMPLE = `\n  <o-dropdown-toggle \n    filterName=\"Filtro\" \n    [options]=\"options\" \n    [isBordered]=\"true\" \n    (dataSelected)=\"getData($event)\"\n    >\n  </o-dropdown-toggle>`;\n\nexport const DROPDOWN_TOGGLE_SIZE_SM_EXAMPLE = `\n  <o-dropdown-toggle \n    filterName=\"Filtro\" \n    [options]=\"options\" \n    size=\"sm\" \n    [isBordered]=\"true\" \n    (dataSelected)=\"getData($event)\"\n    >\n  </o-dropdown-toggle>`;\n\nexport const DROPDOWN_TOGGLE_DATA_SOURCE = [\n  {\n    name: '@Input() <br/> filterName: string',\n    description: 'Se utiliza para definir el nombre del filtro.'\n  },\n  {\n    name: '@Input() <br/> options: string[]',\n    description: 'Se utiliza para definir las opciones del filtro.'\n  },\n  {\n    name: '@Input() <br/> size: Sizes',\n    description: 'Se utiliza para definir el tamaño del filtro.'\n  },\n  {\n    name: '@Input() <br/> isBordered: boolean',\n    description: 'Se utiliza para definir si el filtro tiene borde. Por defecto es false.'\n  }\n];\n\nexport const DROPDOWN_DATA_SOURCE_METHODS = [\n  {\n    name: '@Output() <br/> dataSelected: string',\n    description: 'Se utiliza para obtener el valor seleccionado. El valor devuelto es un array de strings.'\n  }\n];\n\nexport const DROPDOWN_ICON_EXAMPLE_TS = `\n  import { Component } from '@angular/core';\n\n  @Component({\n    selector: 'app-example',\n    template: './app-example.component.html',\n  })\n  export class ExampleComponent {\n    public options = ['Opción 1', 'Opción 2', 'Opción 3'];\n\n    public getData(event: string | string[]): void {\n      console.log(event);\n    }\n  }\n`;\n\nexport const DROPDOWN_ICON_EXAMPLE = `\n  <o-dropdown-icon \n    filterName=\"Mi perfil\" \n    [options]=\"options\" \n    (dataSelected)=\"getData($event)\"\n  > \n    <span icon class=\"dropdown-user-icon ml-0\">&nbsp;</span>\n  </o-dropdown-icon>`;\n\nexport const DROPDOWN_ICON_BORDER_EXAMPLE = `\n  <o-dropdown-icon \n    filterName=\"Mi perfil\" \n    [options]=\"options\" \n    [isBordered]=\"true\" \n    (dataSelected)=\"getData($event)\"\n  >\n    <span icon class=\"dropdown-user-icon ml-0\">&nbsp;</span>\n  </o-dropdown-icon>`;\n\nexport const DROPDOWN_ICON_ONLY_EXAMPLE = `\n  <o-dropdown-icon \n    [options]=\"options\" \n    (dataSelected)=\"getData($event)\"\n  >\n    <span icon class=\"dropdown-user-icon ml-0\">&nbsp;</span>\n  </o-dropdown-icon>`;\n\nexport const DROPDOWN_ICON_MULTIPLE_SELECTION_EXAMPLE = `\n  <o-dropdown-icon \n    filterName=\"Mi perfil\" \n    [options]=\"options\" \n    [isMultipleSelection]=\"true\" \n    (dataSelected)=\"getData($event)\"\n  >\n    <span icon class=\"dropdown-user-icon ml-0\">&nbsp;</span>\n  </o-dropdown-icon>`;\n\nexport const DROPDOWN_ICON_DATA_SOURCE = [\n  {\n    name: '@Input() <br/> filterName: string',\n    description: 'Se utiliza para definir el nombre del filtro.'\n  },\n  {\n    name: '@Input() <br/> options: string[]',\n    description: 'Se utiliza para definir las opciones del filtro.'\n  },\n  {\n    name: '@Input() <br/> size: Sizes',\n    description: 'Se utiliza para definir el tamaño del filtro.'\n  },\n  {\n    name: '@Input() <br/> isBordered: boolean',\n    description: 'Se utiliza para definir si el filtro tiene borde. Por defecto es false.'\n  },\n  {\n    name: '@Input() <br/> isMultipleSelection: boolean',\n    description: 'Se utiliza para definir si el filtro permite múltiple selección. Por defecto es false.'\n  }\n];\n\nexport const DROPDOWN_BEST_PRACTICES = [\n  '<strong>Limitar a 15 la cantidad de opciones</strong> para elegir dentro de un menú.',\n  '<strong>Desplazar los menús con más de 5 opciones.</strong> En este estado, muestra una barra de desplazamiento en su lado derecho para realizar el scroll correspondiente.',\n  '<strong>Utilizar los desplegables para navegación o filtros,</strong> en donde se inicia una acción basada en la selección.',\n  '<strong>Priorizar las opciones en un orden lógico</strong> colocando la opción más seleccionada en la parte superior.',\n  '<strong>Mantener los textos de las opciones del menú breves y concisas.</strong> Se desaconsejan las opciones de menú que se extiendan en varias líneas.',\n  '<strong>Se pueden combinar</strong> con los Botones y la Navegación horizontal.',\n  '<strong>Alinear el menú desplegable con prioridad a la izquierda.</strong> En caso de no tener espacio suficiente para alinear desde la izquierda, alinear a la derecha.',\n  '<strong>Alinear el menú desplegable al centro cuando los espacios en la pantalla sean reducidos.</strong>'\n];\n\nexport const DROPDOWN_BAD_PRACTICES = ['No habilitar la opción de desplegar 2 o más menús al mismo tiempo.'];\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DropdownIconComponent } from './dropdown-icon/dropdown-icon.component';\nimport { DropdownToggleComponent } from './dropdown-toggle/dropdown-toggle.component';\n\nconst routes: Routes = [\n  {\n    path: 'dropdown-toggle',\n    component: DropdownToggleComponent,\n    loadChildren: () => import('./dropdown-toggle/dropdown-toggle.module').then((m) => m.DropdownToggleModule)\n  },\n  {\n    path: 'dropdown-icon',\n    component: DropdownIconComponent,\n    loadChildren: () => import('./dropdown-icon/dropdown-icon.module').then((m) => m.DropdownIconModule)\n  },\n  { path: '**', pathMatch: 'full', redirectTo: 'dropdown-toggle' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DropdownRoutingModule {}\n","import { Component } from '@angular/core';\nimport { DROPDOWN_TOGGLE_NAVIGATION } from 'src/app/constants/dropdown.constants';\n\n@Component({\n  selector: 'app-dropdown-toggle',\n  templateUrl: './dropdown-toggle.component.html',\n  styleUrls: ['./dropdown-toggle.component.scss']\n})\nexport class DropdownToggleComponent {\n  public navigation = DROPDOWN_TOGGLE_NAVIGATION;\n}\n","<section class=\"section\">\n  <o-nav-horizontal [navItems]=\"navigation\"></o-nav-horizontal>\n  <div class=\"content\">\n    <router-outlet></router-outlet>\n  </div>\n</section>\n","import { Component } from '@angular/core';\nimport { DROPDOWN_ICON_NAVIGATION } from 'src/app/constants/dropdown.constants';\n\n@Component({\n  selector: 'app-dropdown-icon',\n  templateUrl: './dropdown-icon.component.html',\n  styleUrls: ['./dropdown-icon.component.scss']\n})\nexport class DropdownIconComponent {\n  public navigation = DROPDOWN_ICON_NAVIGATION;\n}\n","<section class=\"section\">\n  <o-nav-horizontal [navItems]=\"navigation\"></o-nav-horizontal>\n  <div class=\"content\">\n    <router-outlet></router-outlet>\n  </div>\n</section>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DropdownRoutingModule } from './dropdown-routing.module';\nimport { DropdownComponent } from './dropdown.component';\n\n@NgModule({\n  declarations: [DropdownComponent],\n  imports: [CommonModule, DropdownRoutingModule]\n})\nexport class DropdownModule {}\n"],"x_google_ignoreList":[]}