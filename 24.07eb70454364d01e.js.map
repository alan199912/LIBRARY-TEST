{"version":3,"file":"24.07eb70454364d01e.js","mappings":"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","names":["formattedExampleTsCode","code","codeFormattingArrayList","formattedExampleTsCode2","codeFormattingObject","formattedExampleTsCode3","code2","array","splice","length","name","title","route","ACCESS_ROUTE","ACCESS_NAVIGATION","ACCESS_SIMPLE","map","el","Object","replace","ACCESS_GROUP","ACCESS_LIST","ACCESS_SIMPLE_DATA_SOURCE","description","ACCESS_LIST_DATA_SOURCE","ACCESS_GROUP_DATA_SOURCE","ACCESS_INTERFACE","ACCESS_GROUP_TYPE","ACCESS_LIST_INTERFACE","ACCESS_CATEGORY_INTERFACE","ACCESS_LIST_ITEMS","renameAccessList","ACCESS_BIG_LIST_ITEMS","ACCESS_LOG_OUT","ACCESS_CATEGORY_ITEMS","access","shortenArray","ACCESS_ITEM","ACCESS_VERTICAL_EXAMPLE_HTML","ACCESS_HORIZONTAL_EXAMPLE_HTML","ACCESS_BIG_EXAMPLE_HTML","ACCESS_LOG_OUT_EXAMPLE_HTML","ACCESS_GROUP_EXAMPLE_HTML","ACCESS_GROUP_WITH_ICON_EXAMPLE_HTML","ACCESS_GROUP_REVERSE_EXAMPLE_HTML","ACCESS_LIST_EXAMPLE_HTML","ACCESS_LIST_WITH_BOTTON_ACCESS_EXAMPLE_HTML","ACCESS_LIST_WITH_ICON_EXAMPLE_HTML","ACCESS_LIST_WITH_CATEGORIES_EXAMPLE_HTML","ACCESS_VERTICAL_EXAMPLE_TS","ACCESS_HORIZONTAL_EXAMPLE_TS","ACCESS_BIG_EXAMPLE_TS","ACCESS_LOG_OUT_EXAMPLE_TS","ACCESS_GROUP_EXAMPLE_TS","ACCESS_GROUP_WITH_ICON_EXAMPLE_TS","ACCESS_GROUP_REVERSE_EXAMPLE_TS","ACCESS_LIST_EXAMPLE_TS","ACCESS_LIST_WITH_BOTTOM_ACCESS_EXAMPLE_TS","ACCESS_LIST_WITH_ICON_EXAMPLE_TS","ACCESS_LIST_WITH_CATEGORIES_EXAMPLE_TS","routes","path","component","AccessSimpleComponent","constructor","this","selectors","i0","loadChildren","Promise","then","m","AccessSimpleModule","AccessGroupComponent","AccessGroupModule","AccessListComponent","AccessListModule","pathMatch","redirectTo","AccessRoutingModule","RouterModule","AccessModule","CommonModule","ONavModule"],"sourceRoot":"webpack:///","sources":["./src/app/constants/access.constants.ts","./src/app/modules/section-components/access/access-routing.module.ts","./src/app/modules/section-components/access/access-simple/access-simple.component.ts","./src/app/modules/section-components/access/access-simple/access-simple.component.html","./src/app/modules/section-components/access/access-group/access-group.component.ts","./src/app/modules/section-components/access/access-group/access-group.component.html","./src/app/modules/section-components/access/access-list/access-list.component.ts","./src/app/modules/section-components/access/access-list/access-list.component.html","./src/app/modules/section-components/access/access.module.ts"],"sourcesContent":["import { codeFormattingArrayList, codeFormattingObject } from '../core/helpers/codeFormatting.helper';\n\nconst formattedExampleTsCode = (code: any) => `\n  import { Component  } from '@angular/core';\n\n  @Component({\n    selector: 'app-example',\n    templateUrl: './app-example.component.html',\n  })\n  export class ExampleComponent {\n    public accessList = ${codeFormattingArrayList(code)}\n    ];\n  }\n`;\n\nconst formattedExampleTsCode2 = (code: any) => `\n  import { Component  } from '@angular/core';\n\n  @Component({\n    selector: 'app-example',\n    templateUrl: './app-example.component.html',\n  })\n  export class ExampleComponent {\n    public accessItem = ${codeFormattingObject(code)}\n  }\n`;\n\nconst formattedExampleTsCode3 = (code: any, code2: any) => `\n  import { Component  } from '@angular/core';\n\n  @Component({\n    selector: 'app-example',\n    templateUrl: './app-example.component.html',\n  })\n  export class ExampleComponent {\n    public accessList = ${codeFormattingArrayList(code)}\n    ];\n\n    public accessItem = ${codeFormattingObject(code2)}\n  }\n`;\n\nconst formattedExampleTsCode4 = (code: any) => `\n  import { Component  } from '@angular/core';\n\n  @Component({\n    selector: 'app-example',\n    templateUrl: './app-example.component.html',\n  })\n  export class ExampleComponent {\n    public accessCategoryItems = [\n      {\n        name: 'Categoría 1',\n        access: [\n          {\n            title: 'Acceso chico',\n            route: '/alerta'\n          },\n          {\n            title: 'Acceso chico',\n            route: '/galeria'\n          }\n        ]\n      },\n      {\n        name: 'Categoría 2  ',\n        access: [\n          {\n            title: 'Acceso chico',\n            route: '/alerta'\n          },\n          {\n            title: 'Acceso chico',\n            route: '/galeria'\n          }\n        ]\n      }\n    ];\n\n    public accessItem = ${codeFormattingObject(code)}\n  }\n`;\n\nfunction shortenArray(array: any[]) {\n  return [...array].splice(array.length - 2, 2);\n}\n\nfunction renameAccessList(name: string) {\n  return [\n    {\n      title: 'Acceso ' + name,\n      route: '/alerta'\n    },\n    {\n      title: 'Acceso ' + name,\n      route: '/galeria'\n    },\n    {\n      title: 'Acceso ' + name,\n      route: '/panel'\n    },\n    {\n      title: 'Acceso ' + name,\n      route: '/tabla'\n    }\n  ];\n}\n\nconst ACCESS_ROUTE = 'access';\nconst ACCESS_SIMPLE_ROUTE = 'access/access-simple';\nconst ACCESS_GROUP_ROUTE = 'access/access-group';\nconst ACCESS_LIST_ROUTE = 'access/access-list';\n\nexport const ACCESS_NAVIGATION = [\n  {\n    title: 'Api',\n    route: '/components/access/api'\n  },\n  {\n    title: 'Ejemplos',\n    route: '/components/access/examples'\n  }\n];\n\nexport const ACCESS_SIMPLE = ACCESS_NAVIGATION.map((el) => {\n  return {\n    ...el,\n    route: el.route.replace(ACCESS_ROUTE, ACCESS_SIMPLE_ROUTE)\n  };\n});\n\nexport const ACCESS_GROUP = ACCESS_NAVIGATION.map((el) => {\n  return {\n    ...el,\n    route: el.route.replace(ACCESS_ROUTE, ACCESS_GROUP_ROUTE)\n  };\n});\n\nexport const ACCESS_LIST = ACCESS_NAVIGATION.map((el) => {\n  return {\n    ...el,\n    route: el.route.replace(ACCESS_ROUTE, ACCESS_LIST_ROUTE)\n  };\n});\n\nexport const ACCESS_SIMPLE_BEST_PRACTICES = [\n  '<strong>Lorem ipsum dolor,</strong> sit amet consectetur adipisicing elit. Iusto, dolores alias sunt facilis aut vero non asperiores.'\n];\n\nexport const ACCESS_SIMPLE_BAD_PRACTICES = [\n  '<strong>Lorem ipsum dolor,</strong> sit amet consectetur adipisicing elit. Iusto, dolores alias sunt facilis aut vero non asperiores.'\n];\n\nexport const ACCESS_LIST_BEST_PRACTICES = [\n  '<strong>Lorem ipsum dolor,</strong> sit amet consectetur adipisicing elit. Iusto, dolores alias sunt facilis aut vero non asperiores.'\n];\n\nexport const ACCESS_LIST_BAD_PRACTICES = [\n  '<strong>Lorem ipsum dolor,</strong> sit amet consectetur adipisicing elit. Iusto, dolores alias sunt facilis aut vero non asperiores.'\n];\n\nexport const ACCESS_GROUP_BEST_PRACTICES = [\n  '<strong>Lorem ipsum dolor,</strong> sit amet consectetur adipisicing elit. Iusto, dolores alias sunt facilis aut vero non asperiores.'\n];\n\nexport const ACCESS_GROUP_BAD_PRACTICES = [\n  '<strong>Lorem ipsum dolor,</strong> sit amet consectetur adipisicing elit. Iusto, dolores alias sunt facilis aut vero non asperiores.'\n];\n\nexport const ACCESS_SIMPLE_DATA_SOURCE = [\n  {\n    name: '@Input() <br /> accessList: Access[]',\n    description: 'Se utiliza para definir la lista de accesos que se mostrarán en el componente.'\n  },\n  {\n    name: '@Input() <br /> isLogOut: boolean',\n    description:\n      'Se utiliza para definir si se mostrará el botón de cerrar sesión. Por defecto es <strong>false</strong>.'\n  },\n  {\n    name: '@Input() <br /> isBig: boolean',\n    description:\n      'Se utiliza para definir si se mostrará el componente en su versión grande. Por defecto es <strong>false</strong>.'\n  },\n  {\n    name: '@Input() <br />  isCard: boolean',\n    description:\n      'Se utiliza para definir si se mostrará el componente en su versión de tarjeta. Por defecto es <strong>false</strong>.'\n  },\n  {\n    name: '@Input() <br />  isDescriptive: boolean',\n    description:\n      'Se utiliza para definir si se mostrará el componente en su versión descriptiva. Por defecto es <strong>false</strong>.'\n  },\n  {\n    name: '@Input() <br />  isHorizontal: boolean',\n    description:\n      'Se utiliza para definir si se mostrará el componente en su versión horizontal. Por defecto es <strong>false</strong>.'\n  }\n];\n\nexport const ACCESS_LIST_DATA_SOURCE = [\n  {\n    name: '@Input() <br /> title: string',\n    description: 'Se utiliza para definir el título del componente.'\n  },\n  {\n    name: '@Input() <br /> description: string',\n    description: 'Se utiliza para definir la descripción del componente.'\n  },\n  {\n    name: '@Input() <br /> access: Access',\n    description: 'Se utiliza para definir el acceso que se mostrará en el componente.'\n  },\n  {\n    name: '@Input() <br /> accessElements: AccessList[]',\n    description: 'Se utiliza para definir la lista de accesos que se mostrarán en el componente.'\n  },\n  {\n    name: '@Input() <br /> accessCategoryElements: AccessCategory[]',\n    description: 'Se utiliza para definir la lista de categorías de accesos que se mostrarán en el componente.'\n  }\n];\n\nexport const ACCESS_GROUP_DATA_SOURCE = [\n  {\n    name: '@Input() <br /> title: string',\n    description: 'Se utiliza para definir el título del componente.'\n  },\n  {\n    name: '@Input() <br /> description: string',\n    description: 'Se utiliza para definir la descripción del componente.'\n  },\n  {\n    name: '@Input() <br /> access: AccessGroup',\n    description: 'Se utiliza para definir el acceso que se mostrará en el componente.'\n  },\n  {\n    name: '@Input() <br /> isReverse: boolean',\n    description:\n      'Se utiliza para definir si se mostrará el componente en su versión invertida. Por defecto es <strong>false</strong>.'\n  }\n];\n\nexport const ACCESS_INTERFACE = `\n  interface Access {\n    title: string;\n    description: string;\n    route: string;\n    link: string;\n  }\n`;\n\nexport const ACCESS_GROUP_TYPE = `\n  type AccessGroup = Omit<Access, 'description'>\n`;\n\nexport const ACCESS_LIST_INTERFACE = `\n  interface AccessList {\n    title: string;\n    description: string;\n    link: string;\n    route: string;\n    isDescriptive: boolean;\n  }\n`;\n\nexport const ACCESS_CATEGORY_INTERFACE = `\n  interface AccessCategory {\n    name: string;\n    access: Access[];\n  }\n`;\n\nexport const ACCESS_LIST_ITEMS = renameAccessList('chico');\n\nexport const ACCESS_BIG_LIST_ITEMS = renameAccessList('grande');\n\nexport const ACCESS_LOG_OUT = [\n  {\n    title: 'Cerrar sesión',\n    route: '/home'\n  }\n];\n\nexport const ACCESS_CATEGORY_ITEMS = [\n  {\n    name: 'Categoría 1',\n    access: shortenArray(ACCESS_LIST_ITEMS)\n  },\n  {\n    name: 'Categoría 2',\n    access: shortenArray(ACCESS_LIST_ITEMS)\n  }\n];\n\nexport const ACCESS_ITEM = { title: 'Acceso grande', route: '/home' };\n\nexport const ACCESS_VERTICAL_EXAMPLE_HTML = `\n  <o-access [accessList]=\"accessList\"></o-access>\n`;\n\nexport const ACCESS_HORIZONTAL_EXAMPLE_HTML = `\n  <o-access [accessList]=\"accessList\" [isHorizontal]=\"true\"></o-access>\n`;\n\nexport const ACCESS_BIG_EXAMPLE_HTML = `\n  <o-access [accessList]=\"accessList\" [isHorizontal]=\"true\" [isBig]=\"true\"></o-access>\n`;\n\nexport const ACCESS_LOG_OUT_EXAMPLE_HTML = `\n  <o-access [accessList]=\"accessList\" [isLogOut]=\"true\"></o-access>\n`;\n\nexport const ACCESS_GROUP_EXAMPLE_HTML = `\n  <o-access-group title=\"Título\" description=\"Bajada\" [access]=\"accessItem\"></o-access-group>\n`;\n\nexport const ACCESS_GROUP_WITH_ICON_EXAMPLE_HTML = `\n  <o-access-group title=\"Título\" description=\"Bajada\" [access]=\"accessItem\">\n    <i icon class=\"bx bxs-shield-x card-access-icon\"></i>\n  </o-access-group>\n`;\n\nexport const ACCESS_GROUP_REVERSE_EXAMPLE_HTML = `\n  <o-access-group title=\"Título\" description=\"Bajada\" [access]=\"accessItem\" [isReverse]=\"true\">\n    <i icon class=\"bx bxs-shield-x card-access-icon\"></i>\n  </o-access-group>\n`;\n\nexport const ACCESS_LIST_EXAMPLE_HTML = `\n  <o-access-list\n    title=\"Título\"\n    description=\"Bajada\"\n    [accessElements]=\"accessList\"\n  ></o-access-list>\n`;\n\nexport const ACCESS_LIST_WITH_BOTTON_ACCESS_EXAMPLE_HTML = `\n  <o-access-list\n    title=\"Título\"\n    description=\"Bajada\"\n    [accessElements]=\"accessList\"\n    [access]=\"accessItem\"\n  >\n  </o-access-list>\n`;\n\nexport const ACCESS_LIST_WITH_ICON_EXAMPLE_HTML = `\n  <o-access-list\n    title=\"Título\"\n    description=\"Bajada\"\n    [accessElements]=\"accessList\"\n    [access]=\"accessItem\"\n  >\n    <span icon class=\"card-access-icon descriptive\">Nº</span>\n  </o-access-list>\n`;\n\nexport const ACCESS_LIST_WITH_CATEGORIES_EXAMPLE_HTML = `\n  <o-access-list\n    title=\"Título\"\n    description=\"Bajada\"\n    [accessCategoryElements]=\"accessCategoryItems\"\n    [access]=\"accessItem\"\n  >\n    <span icon class=\"card-access-icon descriptive\">Nº</span>\n  </o-access-list>\n`;\n\nexport const ACCESS_VERTICAL_EXAMPLE_TS = formattedExampleTsCode(ACCESS_LIST_ITEMS);\nexport const ACCESS_HORIZONTAL_EXAMPLE_TS = formattedExampleTsCode(ACCESS_LIST_ITEMS);\nexport const ACCESS_BIG_EXAMPLE_TS = formattedExampleTsCode(ACCESS_BIG_LIST_ITEMS);\nexport const ACCESS_LOG_OUT_EXAMPLE_TS = formattedExampleTsCode(ACCESS_LOG_OUT);\n\nexport const ACCESS_GROUP_EXAMPLE_TS = formattedExampleTsCode2(ACCESS_ITEM);\nexport const ACCESS_GROUP_WITH_ICON_EXAMPLE_TS = formattedExampleTsCode2(ACCESS_ITEM);\nexport const ACCESS_GROUP_REVERSE_EXAMPLE_TS = formattedExampleTsCode2(ACCESS_ITEM);\n\nexport const ACCESS_LIST_EXAMPLE_TS = formattedExampleTsCode(ACCESS_LIST_ITEMS);\nexport const ACCESS_LIST_WITH_BOTTOM_ACCESS_EXAMPLE_TS = formattedExampleTsCode3(ACCESS_LIST_ITEMS, ACCESS_ITEM);\nexport const ACCESS_LIST_WITH_ICON_EXAMPLE_TS = formattedExampleTsCode3(ACCESS_LIST_ITEMS, ACCESS_ITEM);\nexport const ACCESS_LIST_WITH_CATEGORIES_EXAMPLE_TS = formattedExampleTsCode4(ACCESS_ITEM);\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AccessGroupComponent } from './access-group/access-group.component';\nimport { AccessListComponent } from './access-list/access-list.component';\nimport { AccessSimpleComponent } from './access-simple/access-simple.component';\n\nconst routes: Routes = [\n  {\n    path: 'access-simple',\n    component: AccessSimpleComponent,\n    loadChildren: () => import('./access-simple/access-simple.module').then((m) => m.AccessSimpleModule)\n  },\n  {\n    path: 'access-group',\n    component: AccessGroupComponent,\n    loadChildren: () => import('./access-group/access-group.module').then((m) => m.AccessGroupModule)\n  },\n  {\n    path: 'access-list',\n    component: AccessListComponent,\n    loadChildren: () => import('./access-list/access-list.module').then((m) => m.AccessListModule)\n  },\n  { path: '**', pathMatch: 'full', redirectTo: 'access-simple' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AccessRoutingModule {}\n","import { Component } from '@angular/core';\nimport { ACCESS_SIMPLE } from '../../../../constants/access.constants';\n\n@Component({\n  selector: 'app-access-simple',\n  templateUrl: './access-simple.component.html',\n  styleUrls: ['./access-simple.component.scss']\n})\nexport class AccessSimpleComponent {\n  public accessSimpleNavigation = ACCESS_SIMPLE;\n}\n","<section class=\"section\">\n  <o-nav-horizontal [navItems]=\"accessSimpleNavigation\"></o-nav-horizontal>\n  <div class=\"content\">\n    <router-outlet></router-outlet>\n  </div>\n</section>\n","import { Component } from '@angular/core';\nimport { ACCESS_GROUP } from 'src/app/constants/access.constants';\n\n@Component({\n  selector: 'app-access-group',\n  templateUrl: './access-group.component.html',\n  styleUrls: ['./access-group.component.scss']\n})\nexport class AccessGroupComponent {\n  public accessGroupNavigation = ACCESS_GROUP;\n}\n","<section class=\"section\">\n  <o-nav-horizontal [navItems]=\"accessGroupNavigation\"></o-nav-horizontal>\n  <div class=\"content\">\n    <router-outlet></router-outlet>\n  </div>\n</section>\n","import { Component } from '@angular/core';\nimport { ACCESS_LIST } from 'src/app/constants/access.constants';\n\n@Component({\n  selector: 'app-access-list',\n  templateUrl: './access-list.component.html',\n  styleUrls: ['./access-list.component.scss']\n})\nexport class AccessListComponent {\n  public accessListNavigation = ACCESS_LIST;\n}\n","<section class=\"section\">\n  <o-nav-horizontal [navItems]=\"accessListNavigation\"></o-nav-horizontal>\n  <div class=\"content\">\n    <router-outlet></router-outlet>\n  </div>\n</section>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ONavModule } from 'projects/ngx-obelisco/src/public-api';\n\nimport { AccessRoutingModule } from './access-routing.module';\nimport { AccessComponent } from './access.component';\n\n@NgModule({\n  declarations: [AccessComponent],\n  imports: [CommonModule, AccessRoutingModule, ONavModule]\n})\nexport class AccessModule {}\n"],"x_google_ignoreList":[]}